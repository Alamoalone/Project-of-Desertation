    protected void doFilterInternal(HttpServletRequest request, @NonNull HttpServletResponse response, @NonNull FilterChain filterChain) throws ServletException, IOException {
        if (request.getHeader(HttpHeaders.AUTHORIZATION) == null) {
            throw new BadCredentialsException("Authorization token is not present");
        }
        try {
            verifyToken(request.getHeader(HttpHeaders.AUTHORIZATION));
            UsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken = getUserAuthentication(request);
            SecurityContextHolder.getContext().setAuthentication(usernamePasswordAuthenticationToken);
            filterChain.doFilter(request, response);
        } catch (TokenVerifier.VerificationException e) {
            log.warn("There was a problem with token verification", e);
            throw new RuntimeException(e);
        }
    }

