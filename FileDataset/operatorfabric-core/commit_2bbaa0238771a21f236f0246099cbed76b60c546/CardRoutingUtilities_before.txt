    public static boolean checkIfUserMustReceiveTheCard(JSONObject cardOperation,
            CurrentUserWithPerimeters currentUserWithPerimeters) {

        Map<String, RightsEnum> userRightsPerProcessAndState = loadUserRightsPerProcessAndState(
                currentUserWithPerimeters);

        JSONObject cardObj = (JSONObject) cardOperation.get("card");

        String idCard = null;
        String process = "";
        String state = "";
        JSONArray groupRecipientsArray = new JSONArray();
        JSONArray entityRecipientsArray = new JSONArray();
        JSONArray userRecipientsArray = new JSONArray();

        if (cardObj != null) {
            idCard = (cardObj.get("id") != null) ? (String) cardObj.get("id") : "";
            process = (String) cardObj.get("process");
            state = (String) cardObj.get("state");

            groupRecipientsArray = (JSONArray) cardObj.get("groupRecipients");
            entityRecipientsArray = (JSONArray) cardObj.get("entityRecipients");
            userRecipientsArray = (JSONArray) cardObj.get("userRecipients");
        }

        if (!checkIfUserMustBeNotifiedForThisProcessState(process, state, currentUserWithPerimeters))
            return false;

        String processStateKey = process + "." + state;
        List<String> userGroups = currentUserWithPerimeters.getUserData().getGroups();
        List<String> userEntities = currentUserWithPerimeters.getUserData().getEntities();

        log.debug("Check if user {} shall receive card {} for processStateKey {}",
                currentUserWithPerimeters.getUserData().getLogin(), idCard, processStateKey);

        // First, we check if the user has the right for receiving this card (Receive or
        // ReceiveAndWrite)
        if (!isReceiveRightsForProcessAndState(process, state, userRightsPerProcessAndState))
            return false;

        // Now, we check if the user is member of the group and/or entity (or the
        // recipient himself)
        if (checkInCaseOfCardSentToUserDirectly(userRecipientsArray,
                currentUserWithPerimeters.getUserData().getLogin())) { // user only
            log.debug("User {} is in user recipients and shall receive card {}",
                    currentUserWithPerimeters.getUserData().getLogin(), idCard);
            return true;
        }

        if (checkInCaseOfCardSentToGroupOrEntityOrBoth(userGroups, groupRecipientsArray, userEntities,
                entityRecipientsArray)) {
            log.debug("User {} is member of a group or/and entity that shall receive card {}",
                    currentUserWithPerimeters.getUserData().getLogin(), idCard);
            return true;
        }

        // FE-4573 : from now, we want user receives all the cards sent by its entities
        if (checkInCaseOfCardSentByEntitiesOfTheUser(cardObj, userEntities)) {
            log.debug("User {} is member of the entity that published the card {} so he shall receive it",
                    currentUserWithPerimeters.getUserData().getLogin(), idCard);
            return true;
        }

        return false;
    }

