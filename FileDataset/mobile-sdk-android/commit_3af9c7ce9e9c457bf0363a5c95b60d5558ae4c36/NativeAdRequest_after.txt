        private void processAdLoaded(AdResponse ad) {
            if (ad.getMediaType() != MediaType.NATIVE) {
                onAdFailed(ResultCode.getNewInstance(ResultCode.INTERNAL_ERROR), null);
            } else {
                final String IMAGE_URL = "image", ICON_URL = "icon";
                final NativeAdResponse response = ad.getNativeAdResponse();
                response.setAdResponseInfo(ad.getResponseData().getAdResponseInfo());
                if (!loadImage && !loadIcon) {
                    if (listener != null) {
                        listener.onAdLoaded(response);
                    } else {
                        response.destroy();
                    }
                    isLoading = false;
                    return;
                } else
                    imageService = new ImageService();
                this.response = response;
                ImageService.ImageReceiver imageReceiver = new ImageService.ImageReceiver() {
                    @Override
                    public void onReceiveImage(String key, Bitmap image) {
                        if (key.equals(IMAGE_URL))
                            response.setImage(image);
                        else if (key.equals(ICON_URL))
                            response.setIcon(image);
                    }

                    @Override
                    public void onFail(String url) {
                        Clog.e(Clog.httpRespLogTag, "Image downloading failed for url " + url);
                    }
                };
                HashMap<String, String> imageUrlMap = new HashMap<>();
                if (loadImage)
                    imageUrlMap.put(IMAGE_URL, response.getImageUrl());
                if (loadIcon)
                    imageUrlMap.put(ICON_URL, response.getIconUrl());
                imageService.registerImageReceiver(imageReceiver, imageUrlMap);
                imageService.registerNotification(this);
                imageService.execute();
            }
        }

