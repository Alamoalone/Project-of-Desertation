    public String triggerAttestation(AttestationRequest attestationRequest, AttestationPolicy attestationPolicy) throws Exception {
        addAttestationProperty(attestationRequest);
        //TODO: remove reading the entity after update
        String attestationOSID = getAttestationOSID(attestationRequest);

        String condition = "";
        if (attestationPolicy.isInternal()) {
            // Resolve condition for REQUESTER
            condition = conditionResolverService.resolve(attestationRequest.getPropertyData(), REQUESTER,
                    attestationPolicy.getConditions(), Collections.emptyList());
        }

        updateGetFileUrl(attestationRequest.getAdditionalInput());

        String propertyData = null;
        if (attestationRequest.getPropertyData() != null) {
            propertyData = attestationRequest.getPropertyData().toString();
        }

        PluginRequestMessage message = PluginRequestMessageCreator.create(
                propertyData, condition, attestationOSID, attestationRequest.getEntityName(),
                attestationRequest.getEmailId(), attestationRequest.getEntityId(), attestationRequest.getAdditionalInput(),
                Action.RAISE_CLAIM.name(), attestationPolicy.getName(), attestationPolicy.getAttestorPlugin(),
                attestationPolicy.getAttestorEntity(), attestationPolicy.getAttestorSignin(),
                attestationRequest.getPropertiesOSID(), attestationRequest.getEmailId());

        PluginRouter.route(message);
        return attestationOSID;
    }

    private void addAttestationProperty(AttestationRequest attestationRequest) throws Exception {
        JsonNode existingEntityNode = readEntity(attestationRequest.getUserId(), attestationRequest.getEntityName(),
                attestationRequest.getEntityId(), false, null, false);
        JsonNode nodeToUpdate = existingEntityNode.deepCopy();
        JsonNode parentNode = nodeToUpdate.get(attestationRequest.getEntityName());
        JsonNode propertyNode = parentNode.get(attestationRequest.getName());
        ObjectNode attestationJsonNode = (ObjectNode) JSONUtil.convertObjectJsonNode(attestationRequest);
        if (attestationRequest.getPropertyData() != null) {
            attestationJsonNode.set("propertyData", JsonNodeFactory.instance.textNode(attestationRequest.getPropertyData().toString()));
        }
        createOrUpdateProperty(attestationRequest.getEntityName(), attestationJsonNode, nodeToUpdate, attestationRequest.getName(), (ObjectNode) parentNode, propertyNode);
        updateEntityAndState(existingEntityNode, nodeToUpdate, attestationRequest.getUserId());
    }

