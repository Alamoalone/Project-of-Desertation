    public static OperationOutput getCredentials(String domain,
                                                 String domainOwner,
                                                 String awsPath,
                                                 String awsProfile,
                                                 String awsRegion,
                                                 Cancellable cancellable) {
        // Do not send the profile if awsProfile is null or default
        String profile = awsProfile == null || awsProfile.equals(AWSProfileHandler.DEFAULT_PROFILE) ? "" :
                String.format("--profile %s ", awsProfile);
        String region = awsRegion == null || awsRegion.equals(InputDialogState.NO_REGION) ? "" :
                String.format("--region %s ", awsRegion);
        String command = String.format(
                "%s codeartifact get-authorization-token %s%s--domain %s --domain-owner %s --query authorizationToken --output text",
                awsPath, profile, region, domain, domainOwner);
        OperationOutput ret = new OperationOutput();
        try {
            LOGGER.debug(command);
            Process process = Runtime.getRuntime().exec(command);
            ProcessReader inputReader = new ProcessReader(process.getInputStream());
            ProcessReader outputReader = new ProcessReader(process.getErrorStream());
            while (!process.waitFor(100, TimeUnit.MILLISECONDS)) {
                if (cancellable.isCancelled()) {
                    process.destroy();
                    return null;
                }
                String mfaRequest = outputReader.getMfaCodeRequest();
                if (mfaRequest != null) {
                    String mfaCode = MfaDialog.getMfaCode(mfaRequest);
                    if (mfaCode==null) {
                        process.destroy();
                        return null;
                    }
                    process.getOutputStream().write((mfaCode+"\n").getBytes(ENCODING));
                    process.getOutputStream().flush();
                }
            }
            if (0 == process.exitValue()) {
                ret.output = inputReader.getOutput();
                if (ret.output == null) {
                    ret.output = "No output collected from AWS command";
                } else {
                    ret.ok = true;
                }
            } else {
                ret.output = outputReader.getOutput();
                if (ret.output != null) {
                    ret.output = ret.output.trim();
                }
            }
        } catch (InvocationTargetException ex){
            LOGGER.error(ex);
            ret.output="Internal plugin error";

        } catch (Exception ex) {
            ret.output = "Error executing aws:" + ex.getMessage();
        }
        if (!profile.isEmpty() && ret.output.contains("aws configure")) {
            ret.output+="\n\n You could also consider \"aws configure " + profile.trim() + "\"";
        }
        return ret;
    }

