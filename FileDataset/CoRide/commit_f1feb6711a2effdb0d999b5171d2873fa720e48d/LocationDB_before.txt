    public void getPickupStatus(String riderId, Callback <Boolean> callback) {
        String UID = riderId;
        Log.d(TAG, "getBookedPassenger: "+UID);

        database.getReference("bookedPassengerRider").addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                LocationData passengerData = null;
                String pickupStatus = null;

                Log.d(TAG, "onDataChange: loop er age ");
                for (DataSnapshot childSnapshot : dataSnapshot.getChildren()) {

                    // Here, you can access each child of bookedPassengerRider
                    String key = childSnapshot.getKey();
                    Log.d(TAG, "onDataChange: seraching Child " + key);
                    String id[] = key.split("@");
                    Log.d(TAG, "onDataChange: " + id[0] + id[1] );


                    String passengerId, passengerStart, passengerDestination;
                    int distance = -1;
                    // Check your condition
                    if (UID.equals(id[1])) {
                        Log.d(TAG, "onDataChange: match found");
                        // Condition satisfied, traverse its children
                        passengerId=id[0];
                        pickupStatus = childSnapshot
                                .child("pickupStatus")
                                .getValue(String.class);

                        DataSnapshot passengerRouteSnapshot = childSnapshot.child("passengerRoute");
                        if (passengerRouteSnapshot.exists()) {
                            Log.d(TAG, "onDataChange: data exists in passengerRoute");
                            passengerStart = passengerRouteSnapshot.child("Start").getValue(String.class);
                            passengerDestination = passengerRouteSnapshot.child("Destination").getValue(String.class);
                            distance = passengerRouteSnapshot.child("Distance").getValue(Integer.class);

                            Log.d(TAG, "onDataChange: " + passengerStart + " -> " + passengerDestination);

                            passengerData = new LocationData(
                                    "Passenger",
                                    passengerStart,
                                    passengerId,
                                    passengerDestination,
                                    distance
                            );
                        }
                        break;
//                        for (DataSnapshot grandChildSnapshot : childSnapshot.getChildren()) {
//                            // Access the child's child data here using grandChildSnapshot
//                            String someData = grandChildSnapshot.child("someChildKey").getValue(String.class);
//                            // ... process the data as needed
//                        }
                    }
                }

                callback.onComplete(pickupStatus.equals("true"));
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {
                callback.onComplete(null);
            }
        });
    }

