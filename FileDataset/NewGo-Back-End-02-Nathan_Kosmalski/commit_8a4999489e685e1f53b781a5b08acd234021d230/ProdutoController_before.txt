    public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

       // produto/ -> POST -> cadastrar produto

        response.setContentType("application/json");

            String hash = request.getPathInfo().split("/").length > 1 ? request.getPathInfo().split("/")[1] : null;


            ProdutoService service = LocalizadorDeServico.getProdutoService();

            if(hash != null){
                String context = request.getPathInfo().split("/").length > 2 ? request.getPathInfo().split("/")[2] : null;
               if(context.equals("ativar")){
                   try {
                       Produto produto = service.updateLativo(UuidConverter.toUuid(hash), new UpdateLativoDTO(true));
                       ResponseDTO<Produto> responseDTO = new ResponseDTO<>(produto, "Produto ativado com sucesso!", 200);
                       response.setStatus(200);
                       response.getWriter().println(JsonConverter.toJson(responseDTO));
                       return;
                   } catch (ProductException e) {
                       response.setStatus(e.getCode());
                       ResponseDTO<Void> responseDTO = new ResponseDTO<>(null, e.getMessage(), e.getCode());
                       response.getWriter().println(JsonConverter.toJson(responseDTO));
                       return;
                   }
               }

               if(context.equals("desativar")){
                   try {
                       Produto produto = service.updateLativo(UuidConverter.toUuid(hash), new UpdateLativoDTO(false));
                       ResponseDTO<Produto> responseDTO = new ResponseDTO<>(produto, "Produto desativado com sucesso!", 200);
                       response.setStatus(200);
                       response.getWriter().println(JsonConverter.toJson(responseDTO));
                       return;
                   } catch (ProductException e) {
                       response.setStatus(e.getCode());
                       ResponseDTO<Void> responseDTO = new ResponseDTO<>(null, e.getMessage(), e.getCode());
                       response.getWriter().println(JsonConverter.toJson(responseDTO));
                       return;
                   }
               }

                response.setStatus(400);
                ResponseDTO<Void> responseDTO = new ResponseDTO<>(null, "rota n√£o encontrada!", 400);
                response.getWriter().println(JsonConverter.toJson(responseDTO));
                return;
            }

            String body = getBodyReqJson(request);
            try{
                Produto produto = CreateProdutoMapper.toProduto(JsonConverter.fromJson(body, CreateProdutoDTO.class));
                produto = service.createProduto(produto);
                ResponseDTO<Produto> responseDTO = new ResponseDTO<>(produto, "Produto cadastrado com sucesso!", 200);
                response.setStatus(200);
                response.getWriter().println(JsonConverter.toJson(responseDTO));
            }catch (ProductException e){
                response.setStatus(e.getCode());
                ResponseDTO<Void> responseDTO = new ResponseDTO<>(null, e.getMessage(), e.getCode());
                response.getWriter().println(JsonConverter.toJson(responseDTO));
            }
    }

