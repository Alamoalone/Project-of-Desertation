    public static void create(Context ctx) throws SQLException {
        var userInput = ctx.formParam("url");
        if (userInput != null) {
            userInput = userInput.trim().toLowerCase();
        }

        try {
            assert userInput != null;
            if (!userInput.startsWith("http://") && !userInput.startsWith("https://")) {
                userInput = "https://" + userInput;
            }

            URI uri = new URI(userInput);
            var scheme = uri.getScheme();
            var host = uri.getHost();
            var port = uri.getPort();

            if (host != null && host.contains(".")) {
                if (host.startsWith("www.")) {
                    host = host.substring(4);
                }

                StringBuilder sb = new StringBuilder();
                sb.append(scheme).append("://").append(host);
                if (port != -1) {
                    sb.append(":").append(port);
                }

                var url = new Url(sb.toString());

                if (UrlsRepository.findByName(url.getName()).isEmpty()) {
                    UrlsRepository.save(url);
                    ctx.sessionAttribute("flash", "Страница успешно добавлена"); // TODO check message
                    ctx.sessionAttribute("flashType", "success");
                    ctx.redirect(Routes.urlsPath());

                } else {
                    ctx.sessionAttribute("flash", "Страница уже существует"); // TODO check message
                    ctx.sessionAttribute("flashType", "info");
                    ctx.redirect(Routes.urlsPath());
                }

            } else {
                throw new URISyntaxException(userInput, "Invalid URL");
            }
        } catch (AssertionError | URISyntaxException e) {
            ctx.sessionAttribute("flash", "Некорректный URL"); // TODO check message
            ctx.sessionAttribute("flashType", "danger");
            ctx.redirect(Routes.rootPath());
        }
    }