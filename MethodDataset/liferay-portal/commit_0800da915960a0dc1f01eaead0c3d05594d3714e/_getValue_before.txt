	private String _getValue(
		HttpServletRequest httpServletRequest, InfoField infoField,
		String infoFormName, Locale locale) {

		if (httpServletRequest == null) {
			return StringPool.BLANK;
		}

		LayoutDisplayPageObjectProvider<?> layoutDisplayPageObjectProvider =
			(LayoutDisplayPageObjectProvider<?>)httpServletRequest.getAttribute(
				LayoutDisplayPageWebKeys.LAYOUT_DISPLAY_PAGE_OBJECT_PROVIDER);

		if (layoutDisplayPageObjectProvider == null) {
			return StringPool.BLANK;
		}

		String className = _infoSearchClassMapperRegistry.getClassName(
			layoutDisplayPageObjectProvider.getClassName());

		if (!Objects.equals(className, infoFormName)) {
			return StringPool.BLANK;
		}

		InfoItemFieldValuesProvider<Object> infoItemFieldValuesProvider =
			_infoItemServiceRegistry.getFirstInfoItemService(
				InfoItemFieldValuesProvider.class, className);

		if (infoItemFieldValuesProvider == null) {
			if (_log.isWarnEnabled()) {
				_log.warn(
					"Unable to get info item form provider for class " +
						layoutDisplayPageObjectProvider.getClassName());
			}

			return StringPool.BLANK;
		}

		InfoItemFieldValues infoItemFieldValues =
			infoItemFieldValuesProvider.getInfoItemFieldValues(
				layoutDisplayPageObjectProvider.getDisplayObject());

		InfoFieldValue<?> infoFieldValue =
			infoItemFieldValues.getInfoFieldValue(infoField.getName());

		if (infoField.getInfoFieldType() == DateInfoFieldType.INSTANCE) {
			SimpleDateFormat simpleDateFormat = new SimpleDateFormat(
				"yyyy-MM-dd");

			return simpleDateFormat.format(infoFieldValue.getValue());
		}

		if (infoField.getInfoFieldType() == MultiselectInfoFieldType.INSTANCE) {
			ArrayList<KeyLocalizedLabelPair> values =
				(ArrayList<KeyLocalizedLabelPair>)infoFieldValue.getValue();

			if (ListUtil.isEmpty(values)) {
				return StringPool.BLANK;
			}

			List<OptionInfoFieldType> optionInfoFieldTypes =
				(List<OptionInfoFieldType>)infoField.getAttribute(
					MultiselectInfoFieldType.OPTIONS);

			return ListUtil.toString(
				_getSelectedOptions(locale, optionInfoFieldTypes, values),
				StringPool.BLANK);
		}

		if (infoField.getInfoFieldType() == SelectInfoFieldType.INSTANCE) {
			ArrayList<KeyLocalizedLabelPair> values =
				(ArrayList<KeyLocalizedLabelPair>)infoFieldValue.getValue();

			if (ListUtil.isEmpty(values)) {
				return StringPool.BLANK;
			}

			List<OptionInfoFieldType> optionInfoFieldTypes =
				(List<OptionInfoFieldType>)infoField.getAttribute(
					SelectInfoFieldType.OPTIONS);

			return ListUtil.toString(
				_getSelectedOptions(locale, optionInfoFieldTypes, values),
				StringPool.BLANK);
		}

		Object value = infoFieldValue.getValue();

		if (value == null) {
			return StringPool.BLANK;
		}

		return String.valueOf(value);
	}