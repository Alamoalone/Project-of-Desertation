    private boolean setMapElementGivenOperand(Map<BIROperand, BIRMappingConstructorEntryWithIndex> birOperands,
                                              List<BIRNonTerminator> newInsList, BIROperand handleArrayOperand,
                                              TempVarsForArraySplit tempVars,
                                              Map<BIRAbstractInstruction, SplitPointDetails> insSplitPoints,
                                              BIRAbstractInstruction currIns, SplitFuncEnv splitFuncEnv,
                                              Map<BIROperand, NonTerminatorLocation> mapKeyOperandLocations,
                                              int bbIndex, int insIndex) {
        if (insSplitPoints.containsKey(currIns)) {
            SplitPointDetails splitPointDetails = insSplitPoints.get(currIns);
            List<BIROperand> currOperands = splitPointDetails.arrayElementsBIROperands;
            for (BIROperand currOperand : currOperands) {
                BIRMappingConstructorEntryWithIndex mappingConstructorEntryWithIndex = birOperands.get(currOperand);
                BIRNode.BIRMappingConstructorEntry mappingConstructorEntry = mappingConstructorEntryWithIndex
                        .mappingConstructorEntry;
                boolean isKeyValueEntry = mappingConstructorEntry instanceof BIRNode.BIRMappingConstructorKeyValueEntry;
                if (isKeyValueEntry && insIndex != -1) {
                    BIROperand keyOperand = ((BIRNode.BIRMappingConstructorKeyValueEntry) mappingConstructorEntry)
                            .keyOp;
                    if (mapKeyOperandLocations.containsKey(keyOperand)) {
                        NonTerminatorLocation nonTerminatorLocation = mapKeyOperandLocations.get(keyOperand);
                        if (nonTerminatorLocation != null && (nonTerminatorLocation.bbNum > bbIndex ||
                                (nonTerminatorLocation.bbNum == bbIndex && nonTerminatorLocation.insNum > insIndex))) {
                            splitPointDetails.splitHere = false;
                            continue;
                        }
                    }
                }
                int arrayIndex = mappingConstructorEntryWithIndex.index;
                setMapElement(newInsList, handleArrayOperand, currOperand, mappingConstructorEntry, arrayIndex,
                        tempVars);
                if (isKeyValueEntry) {
                    BIRVariableDcl keyVarDcl = ((BIRNode.BIRMappingConstructorKeyValueEntry) mappingConstructorEntry)
                            .keyOp.variableDcl;
                    if (keyVarDcl.kind == VarKind.ARG) {
                        splitFuncEnv.splitFuncArgs.add(keyVarDcl);
                    }
                }
            }
            // no need to set the below in else part as it will not affect since splitNow is considered along with this
            splitFuncEnv.splitHere = splitPointDetails.splitHere;
            return true;
        }
        return false;
    }