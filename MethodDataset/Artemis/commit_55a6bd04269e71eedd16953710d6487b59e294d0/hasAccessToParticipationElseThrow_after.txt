    private void hasAccessToParticipationElseThrow(ProgrammingExerciseStudentParticipation participation) {
        participationAuthCheckService.checkCanAccessParticipationElseThrow(participation);
        ZonedDateTime exerciseStartDate = participation.getExercise().getParticipationStartDate();
        if (exerciseStartDate != null) {
            boolean isStudent = authCheckService.isOnlyStudentInCourse(participation.getExercise().getCourseViaExerciseGroupOrCourseMember(), null);
            boolean exerciseNotStarted = exerciseStartDate.isAfter(ZonedDateTime.now());
            if (isStudent && exerciseNotStarted) {
                throw new AccessForbiddenException("Participation not yet started");
            }
        }
    }