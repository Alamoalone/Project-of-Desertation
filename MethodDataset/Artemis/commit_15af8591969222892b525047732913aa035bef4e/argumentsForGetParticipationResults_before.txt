    private static Stream<Arguments> argumentsForGetParticipationResults() {
        ZonedDateTime startDate = ZonedDateTime.now().minusDays(3);
        ZonedDateTime someDate = ZonedDateTime.now();
        ZonedDateTime futureDate = ZonedDateTime.now().plusDays(3);
        ZonedDateTime pastDate = ZonedDateTime.now().minusDays(1);
        return Stream.of(
                // No assessmentType and no completionDate -> notFound
                Arguments.of(startDate, null, null, null, false),
                // Automatic result is always returned
                Arguments.of(startDate, AssessmentType.AUTOMATIC, null, null, true), Arguments.of(startDate, AssessmentType.AUTOMATIC, someDate, null, true),
                Arguments.of(startDate, AssessmentType.AUTOMATIC, someDate, futureDate, true), Arguments.of(startDate, AssessmentType.AUTOMATIC, someDate, pastDate, true),
                Arguments.of(startDate, AssessmentType.AUTOMATIC, null, futureDate, true), Arguments.of(startDate, AssessmentType.AUTOMATIC, null, pastDate, true),
                // Manual result without completion date (assessment was only saved but no submitted) is not returned
                Arguments.of(startDate, AssessmentType.SEMI_AUTOMATIC, null, null, false), Arguments.of(startDate, AssessmentType.SEMI_AUTOMATIC, null, futureDate, false),
                Arguments.of(startDate, AssessmentType.SEMI_AUTOMATIC, null, pastDate, false),
                // Manual result is not returned if completed and assessment due date has not passed
                Arguments.of(startDate, AssessmentType.SEMI_AUTOMATIC, someDate, futureDate, false),
                // Manual result is returned if completed and assessmentDue date has passed
                Arguments.of(startDate, AssessmentType.SEMI_AUTOMATIC, someDate, pastDate, true));
    }