{
    "sha": "d7e8fcf90bf10fdc32a32901473ebd7fab4561c4",
    "node_id": "C_kwDOJEwArdoAKGQ3ZThmY2Y5MGJmMTBmZGMzMmEzMjkwMTQ3M2ViZDdmYWI0NTYxYzQ",
    "commit": {
        "author": {
            "name": "rhsehfm33",
            "email": "44993366+rhsehfm33@users.noreply.github.com",
            "date": "2023-03-08T06:42:37Z"
        },
        "committer": {
            "name": "rhsehfm33",
            "email": "44993366+rhsehfm33@users.noreply.github.com",
            "date": "2023-03-08T06:42:37Z"
        },
        "message": "fix: Null Pointer Exception 처리",
        "tree": {
            "sha": "22da2e952e27415f643d0af79fe22c0a99308261",
            "url": "https://api.github.com/repos/Review-Kurly/Review-Kurly-BE/git/trees/22da2e952e27415f643d0af79fe22c0a99308261"
        },
        "url": "https://api.github.com/repos/Review-Kurly/Review-Kurly-BE/git/commits/d7e8fcf90bf10fdc32a32901473ebd7fab4561c4",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/Review-Kurly/Review-Kurly-BE/commits/d7e8fcf90bf10fdc32a32901473ebd7fab4561c4",
    "html_url": "https://github.com/Review-Kurly/Review-Kurly-BE/commit/d7e8fcf90bf10fdc32a32901473ebd7fab4561c4",
    "comments_url": "https://api.github.com/repos/Review-Kurly/Review-Kurly-BE/commits/d7e8fcf90bf10fdc32a32901473ebd7fab4561c4/comments",
    "author": {
        "login": "rhsehfm33",
        "id": 44993366,
        "node_id": "MDQ6VXNlcjQ0OTkzMzY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44993366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rhsehfm33",
        "html_url": "https://github.com/rhsehfm33",
        "followers_url": "https://api.github.com/users/rhsehfm33/followers",
        "following_url": "https://api.github.com/users/rhsehfm33/following{/other_user}",
        "gists_url": "https://api.github.com/users/rhsehfm33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rhsehfm33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rhsehfm33/subscriptions",
        "organizations_url": "https://api.github.com/users/rhsehfm33/orgs",
        "repos_url": "https://api.github.com/users/rhsehfm33/repos",
        "events_url": "https://api.github.com/users/rhsehfm33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rhsehfm33/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "rhsehfm33",
        "id": 44993366,
        "node_id": "MDQ6VXNlcjQ0OTkzMzY2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44993366?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rhsehfm33",
        "html_url": "https://github.com/rhsehfm33",
        "followers_url": "https://api.github.com/users/rhsehfm33/followers",
        "following_url": "https://api.github.com/users/rhsehfm33/following{/other_user}",
        "gists_url": "https://api.github.com/users/rhsehfm33/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rhsehfm33/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rhsehfm33/subscriptions",
        "organizations_url": "https://api.github.com/users/rhsehfm33/orgs",
        "repos_url": "https://api.github.com/users/rhsehfm33/repos",
        "events_url": "https://api.github.com/users/rhsehfm33/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rhsehfm33/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "a741e916b2a39cbfba5f076b94eccab365d7f8c2",
            "url": "https://api.github.com/repos/Review-Kurly/Review-Kurly-BE/commits/a741e916b2a39cbfba5f076b94eccab365d7f8c2",
            "html_url": "https://github.com/Review-Kurly/Review-Kurly-BE/commit/a741e916b2a39cbfba5f076b94eccab365d7f8c2"
        }
    ],
    "stats": {
        "total": 4,
        "additions": 3,
        "deletions": 1
    },
    "files": [
        {
            "sha": "80ca89f04ac2617185dc2d02751c0ef7273b3be6",
            "filename": "src/main/java/sparat/spartaclone/review/controller/ReviewController.java",
            "status": "modified",
            "additions": 3,
            "deletions": 1,
            "changes": 4,
            "blob_url": "https://github.com/Review-Kurly/Review-Kurly-BE/blob/d7e8fcf90bf10fdc32a32901473ebd7fab4561c4/src%2Fmain%2Fjava%2Fsparat%2Fspartaclone%2Freview%2Fcontroller%2FReviewController.java",
            "raw_url": "https://github.com/Review-Kurly/Review-Kurly-BE/raw/d7e8fcf90bf10fdc32a32901473ebd7fab4561c4/src%2Fmain%2Fjava%2Fsparat%2Fspartaclone%2Freview%2Fcontroller%2FReviewController.java",
            "contents_url": "https://api.github.com/repos/Review-Kurly/Review-Kurly-BE/contents/src%2Fmain%2Fjava%2Fsparat%2Fspartaclone%2Freview%2Fcontroller%2FReviewController.java?ref=d7e8fcf90bf10fdc32a32901473ebd7fab4561c4",
            "patch": "@@ -18,6 +18,8 @@\n import javax.validation.Valid;\n import java.nio.file.AccessDeniedException;\n \n+// TODO: userDetails == null ? null : userDetails.getUsername() 방식으로 처리하는 것보다 더 좋은 방식 알아보기\n+\n @Tag(name = \"Review\")\n @RestController\n @RequestMapping(\"/api/reviews-details\")\n@@ -37,7 +39,7 @@ public ApiResponse<ReviewsDetailsResponseDto> createReview(@ModelAttribute Revie\n     @Operation(summary = \"리뷰 상세페이지 조회\", description = \"리뷰 상세페이지 댓글 목록까지 조회 \")\n     public ApiResponse<ReviewsDetailsResponseDto> getReview(@PathVariable Long reviewId,\n                                                             @Parameter(hidden = true) @AuthenticationPrincipal UserDetailsImpl userDetails) throws AccessDeniedException {\n-        return ApiResponse.successOf(HttpStatus.CREATED,reviewService.getReview(reviewId, userDetails.getUsername()));\n+        return ApiResponse.successOf(HttpStatus.CREATED,reviewService.getReview(reviewId, userDetails == null ? null : userDetails.getUsername()));\n     }\n \n     @PutMapping(value =\"/{reviewId}\" , consumes = MediaType.MULTIPART_FORM_DATA_VALUE)"
        }
    ]
}