@@ -4,18 +4,23 @@
 
 public class Visibility {
 
+    /**
+     * version skip happens when e has been updated by t1 from v0
+     * to v1, but t1 can't be seen by t2, and t2 try to update e,
+     * the version of it will transfer from v0 to v2, skipping v1
+     */
     public static boolean isVersionSkip(TransactionManager tm, Transaction t, Entry e) {
         long xmax = e.getXmax();
         if (t.level == 0) return false;
         else return tm.isCommitted(xmax) && (xmax > t.xid || t.isInSnapShot(xmax));
     }
 
-    public static boolean isVisible(TransactionManager tm, Transaction t, Entry e) {
+    // determine if record(e) is visible to transaction(t) based on isolation level
+    protected static boolean isVisible(TransactionManager tm, Transaction t, Entry e) {
         if(t.level == 0) return readCommitted(tm, t, e);
         else return repeatableRead(tm, t, e);
     }
 
-    // determine if record(e) is visible to transaction(t)
     private static boolean readCommitted(TransactionManager tm, Transaction t, Entry e) {
         long xid = t.xid;
         long xmin = e.getXmin();