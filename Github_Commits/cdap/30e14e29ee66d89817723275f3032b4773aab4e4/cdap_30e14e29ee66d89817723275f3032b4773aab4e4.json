{
    "sha": "30e14e29ee66d89817723275f3032b4773aab4e4",
    "node_id": "C_kwDOAVf5p9oAKDMwZTE0ZTI5ZWU2NmQ4OTgxNzcyMzI3NWYzMDMyYjQ3NzNhYWI0ZTQ",
    "commit": {
        "author": {
            "name": "GnsP",
            "email": "gnspsd@google.com",
            "date": "2023-11-08T04:47:19Z"
        },
        "committer": {
            "name": "GnsP",
            "email": "gnspsd@google.com",
            "date": "2023-11-09T09:19:53Z"
        },
        "message": "Fix the null pointer exception caused by unsafe unboxing of Boolean to boolean",
        "tree": {
            "sha": "54fb9bf5190694c903cc8d1dbc6cd3982ffccb38",
            "url": "https://api.github.com/repos/cdapio/cdap/git/trees/54fb9bf5190694c903cc8d1dbc6cd3982ffccb38"
        },
        "url": "https://api.github.com/repos/cdapio/cdap/git/commits/30e14e29ee66d89817723275f3032b4773aab4e4",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/cdapio/cdap/commits/30e14e29ee66d89817723275f3032b4773aab4e4",
    "html_url": "https://github.com/cdapio/cdap/commit/30e14e29ee66d89817723275f3032b4773aab4e4",
    "comments_url": "https://api.github.com/repos/cdapio/cdap/commits/30e14e29ee66d89817723275f3032b4773aab4e4/comments",
    "author": {
        "login": "GnsP",
        "id": 4161531,
        "node_id": "MDQ6VXNlcjQxNjE1MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4161531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GnsP",
        "html_url": "https://github.com/GnsP",
        "followers_url": "https://api.github.com/users/GnsP/followers",
        "following_url": "https://api.github.com/users/GnsP/following{/other_user}",
        "gists_url": "https://api.github.com/users/GnsP/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GnsP/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GnsP/subscriptions",
        "organizations_url": "https://api.github.com/users/GnsP/orgs",
        "repos_url": "https://api.github.com/users/GnsP/repos",
        "events_url": "https://api.github.com/users/GnsP/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GnsP/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "GnsP",
        "id": 4161531,
        "node_id": "MDQ6VXNlcjQxNjE1MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4161531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GnsP",
        "html_url": "https://github.com/GnsP",
        "followers_url": "https://api.github.com/users/GnsP/followers",
        "following_url": "https://api.github.com/users/GnsP/following{/other_user}",
        "gists_url": "https://api.github.com/users/GnsP/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/GnsP/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/GnsP/subscriptions",
        "organizations_url": "https://api.github.com/users/GnsP/orgs",
        "repos_url": "https://api.github.com/users/GnsP/repos",
        "events_url": "https://api.github.com/users/GnsP/events{/privacy}",
        "received_events_url": "https://api.github.com/users/GnsP/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "6bb256698f451d44223dea632ae936acba9cec1b",
            "url": "https://api.github.com/repos/cdapio/cdap/commits/6bb256698f451d44223dea632ae936acba9cec1b",
            "html_url": "https://github.com/cdapio/cdap/commit/6bb256698f451d44223dea632ae936acba9cec1b"
        }
    ],
    "stats": {
        "total": 275,
        "additions": 179,
        "deletions": 96
    },
    "files": [
        {
            "sha": "a979c3ac1098af1b53963e18c2f064073e055703",
            "filename": "cdap-app-fabric/src/main/java/io/cdap/cdap/app/store/Store.java",
            "status": "modified",
            "additions": 15,
            "deletions": 1,
            "changes": 16,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Fapp%2Fstore%2FStore.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Fapp%2Fstore%2FStore.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Fapp%2Fstore%2FStore.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -359,14 +359,28 @@ List<ProgramHistory> getRuns(Collection<ProgramReference> programs, ProgramRunSt\n \n   /**\n    * Creates new application if it doesn't exist. Updates existing one otherwise.\n+   * Always marks the added application as latest.\n    *\n    * @param id            application id\n    * @param meta          application metadata to store\n    * @return              the number of edits to the application. A new application will return 0.\n    * @throws ConflictException if the app cannot be deployed when the user provided parent-version doesn't match the\n    *     current latest version\n    */\n-  int addApplication(ApplicationId id, ApplicationMeta meta) throws ConflictException;\n+  int addLatestApplication(ApplicationId id, ApplicationMeta meta) throws ConflictException;\n+\n+  /**\n+   * Creates new application if it doesn't exist. Updates existing one otherwise.\n+   * Marks the application as latest based on the isLatest param.\n+   *\n+   * @param id            application id\n+   * @param meta          application metadata to store\n+   * @param isLatest      boolean, indicating if the application should be marked latest\n+   * @return              the number of edits to the application. A new application will return 0.\n+   * @throws ConflictException if the app cannot be deployed when the user provided parent-version doesn't match the\n+   *     current latest version\n+   */\n+  int addApplication(ApplicationId id, ApplicationMeta meta, boolean isLatest) throws ConflictException;\n \n   /**\n    * Marks existing applications as latest."
        },
        {
            "sha": "2b4f8021d70d0bf14e4e42f39a4304bf198bd664",
            "filename": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/deploy/pipeline/ApplicationRegistrationStage.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fdeploy%2Fpipeline%2FApplicationRegistrationStage.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fdeploy%2Fpipeline%2FApplicationRegistrationStage.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fdeploy%2Fpipeline%2FApplicationRegistrationStage.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -67,9 +67,9 @@ public void process(ApplicationWithPrograms input) throws Exception {\n     boolean ownerAdded = addOwnerIfRequired(input, allAppVersionsAppIds);\n     ApplicationMeta appMeta = new ApplicationMeta(applicationSpecification.getName(),\n         input.getSpecification(),\n-        input.getChangeDetail(), input.getSourceControlMeta(), !input.isSkipMarkingLatest());\n+        input.getChangeDetail(), input.getSourceControlMeta());\n     try {\n-      int editCount = store.addApplication(input.getApplicationId(), appMeta);\n+      int editCount = store.addApplication(input.getApplicationId(), appMeta, !input.isSkipMarkingLatest());\n \n       if (input.isSkipMarkingLatest()) {\n         // TODO [CDAP-20848]"
        },
        {
            "sha": "5b93e1fb0c748060e1eedb6f52ebb8a0609b98b5",
            "filename": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/AppMetadataStore.java",
            "status": "modified",
            "additions": 32,
            "deletions": 14,
            "changes": 46,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FAppMetadataStore.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FAppMetadataStore.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FAppMetadataStore.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -59,7 +59,6 @@\n import io.cdap.cdap.proto.id.ProgramReference;\n import io.cdap.cdap.proto.id.ProgramRunId;\n import io.cdap.cdap.proto.sourcecontrol.SourceControlMeta;\n-import io.cdap.cdap.spi.data.InvalidFieldException;\n import io.cdap.cdap.spi.data.SortOrder;\n import io.cdap.cdap.spi.data.StructuredRow;\n import io.cdap.cdap.spi.data.StructuredTable;\n@@ -630,6 +629,7 @@ public void markAsLatest(ApplicationId id)\n \n   /**\n    * Persisting a new application version in the table.\n+   * Marks the created application version as latest (always).\n    *\n    * @param id the application id\n    * @param appMeta the application metadata to be written\n@@ -638,12 +638,28 @@ public void markAsLatest(ApplicationId id)\n    * @throws ConflictException if parent-version provided in the request doesn't match the\n    *     latest version, do not allow app to be created\n    */\n-  public int createApplicationVersion(ApplicationId id, ApplicationMeta appMeta)\n+  public int createLatestApplicationVersion(ApplicationId id, ApplicationMeta appMeta)\n+      throws IOException, ConflictException {\n+    return createApplicationVersion(id, appMeta, true);\n+  }\n+\n+  /**\n+   * Persisting a new application version in the table.\n+   * Marks the created application version as latest based on the value of markAsLatest.\n+   *\n+   * @param id the application id\n+   * @param appMeta the application metadata to be written\n+   * @param markAsLatest boolean, indicating if the application should be marked as latest\n+   * @return the number of edits to the application. A new application will return 0.\n+   * @throws IOException if failed to write app\n+   * @throws ConflictException if parent-version provided in the request doesn't match the\n+   *     latest version, do not allow app to be created\n+   */\n+  public int createApplicationVersion(ApplicationId id, ApplicationMeta appMeta, boolean markAsLatest)\n       throws IOException, ConflictException {\n     String parentVersion = Optional.ofNullable(appMeta.getChange())\n         .map(ChangeDetail::getParentVersion).orElse(null);\n \n-    boolean markAsLatest = appMeta.getIsLatest();\n     // Fetch the latest version\n     ApplicationMeta latest = getLatest(id.getAppReference());\n     String latestVersion = latest == null ? null : latest.getSpec().getAppVersion();\n@@ -695,11 +711,21 @@ void writeApplication(String namespaceId, String appId, String versionId,\n       @Nullable SourceControlMeta sourceControlMeta, boolean markAsLatest) throws IOException {\n     writeApplicationSerialized(namespaceId, appId, versionId,\n         GSON.toJson(\n-            new ApplicationMeta(appId, spec, null, null, markAsLatest)),\n+            new ApplicationMeta(appId, spec, null, null)),\n         change, sourceControlMeta, markAsLatest);\n     updateApplicationEdit(namespaceId, appId);\n   }\n \n+  @VisibleForTesting\n+  List<Field<?>> getApplicationPrimaryKeys(String namespaceId, String appId,\n+      String versionId) {\n+    List<Field<?>> fields = new ArrayList<>();\n+    fields.add(Fields.stringField(StoreDefinition.AppMetadataStore.NAMESPACE_FIELD, namespaceId));\n+    fields.add(Fields.stringField(StoreDefinition.AppMetadataStore.APPLICATION_FIELD, appId));\n+    fields.add(Fields.stringField(StoreDefinition.AppMetadataStore.VERSION_FIELD, versionId));\n+    return fields;\n+  }\n+\n   /**\n    * Get the edit number of an application.\n    *\n@@ -2478,15 +2504,6 @@ private List<Field<?>> getNamespaceApplicationKeys(ApplicationReference appRef)\n     return fields;\n   }\n \n-  private List<Field<?>> getApplicationPrimaryKeys(String namespaceId, String appId,\n-      String versionId) {\n-    List<Field<?>> fields = new ArrayList<>();\n-    fields.add(Fields.stringField(StoreDefinition.AppMetadataStore.NAMESPACE_FIELD, namespaceId));\n-    fields.add(Fields.stringField(StoreDefinition.AppMetadataStore.APPLICATION_FIELD, appId));\n-    fields.add(Fields.stringField(StoreDefinition.AppMetadataStore.VERSION_FIELD, versionId));\n-    return fields;\n-  }\n-\n   private List<Field<?>> getApplicationNamespaceAppCreationKeys(ApplicationId appId)\n       throws IOException {\n     List<Field<?>> fields = new ArrayList<>();\n@@ -2644,7 +2661,8 @@ private ApplicationMeta decodeRow(StructuredRow row) {\n     } else {\n       changeDetail = new ChangeDetail(changeSummary, null, author, creationTimeMillis, latest);\n     }\n-    return new ApplicationMeta(id, spec, changeDetail, sourceControl, latest);\n+\n+    return new ApplicationMeta(id, spec, changeDetail, sourceControl);\n   }\n \n   private void writeToStructuredTableWithPrimaryKeys("
        },
        {
            "sha": "0586c2df2179045a16fcc461075c7e04bacf414a",
            "filename": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/ApplicationMeta.java",
            "status": "modified",
            "additions": 1,
            "deletions": 16,
            "changes": 17,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FApplicationMeta.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FApplicationMeta.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FApplicationMeta.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -36,23 +36,13 @@ public class ApplicationMeta {\n   private final ChangeDetail change;\n   @Nullable\n   private final SourceControlMeta sourceControlMeta;\n-  // the isLatest field does not need to be serialized in the ApplicationMetadata object\n-  // as it's stored as a separate column in the app spec table.\n-  private final transient boolean isLatest;\n \n   public ApplicationMeta(String id, ApplicationSpecification spec,\n-      @Nullable ChangeDetail change, @Nullable SourceControlMeta sourceControlMeta,\n-      boolean isLatest) {\n+      @Nullable ChangeDetail change, @Nullable SourceControlMeta sourceControlMeta) {\n     this.id = id;\n     this.spec = spec;\n     this.change = change;\n     this.sourceControlMeta = sourceControlMeta;\n-    this.isLatest = isLatest;\n-  }\n-\n-  public ApplicationMeta(String id, ApplicationSpecification spec,\n-      @Nullable ChangeDetail change, @Nullable SourceControlMeta sourceControlMeta) {\n-    this(id, spec, change, sourceControlMeta, true);\n   }\n \n   public ApplicationMeta(String id, ApplicationSpecification spec, @Nullable ChangeDetail change) {\n@@ -77,18 +67,13 @@ public SourceControlMeta getSourceControlMeta() {\n     return sourceControlMeta;\n   }\n \n-  public boolean getIsLatest() {\n-    return isLatest;\n-  }\n-\n   @Override\n   public String toString() {\n     return Objects.toStringHelper(this)\n         .add(\"id\", id)\n         .add(\"spec\", ADAPTER.toJson(spec))\n         .add(\"change\", change)\n         .add(\"sourceControlMeta\", sourceControlMeta)\n-        .add(\"isLatest\", isLatest)\n         .toString();\n   }\n }"
        },
        {
            "sha": "a35340f26445e516d30b71a0ba82ad26c3f84ba0",
            "filename": "cdap-app-fabric/src/main/java/io/cdap/cdap/internal/app/store/DefaultStore.java",
            "status": "modified",
            "additions": 9,
            "deletions": 2,
            "changes": 11,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FDefaultStore.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FDefaultStore.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Fmain%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FDefaultStore.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -594,9 +594,16 @@ public void markApplicationsLatest(Collection<ApplicationId> appIds)\n   }\n \n   @Override\n-  public int addApplication(ApplicationId id, ApplicationMeta meta) throws ConflictException {\n+  public int addLatestApplication(ApplicationId id, ApplicationMeta meta) throws ConflictException {\n     return TransactionRunners.run(transactionRunner, context -> {\n-      return getAppMetadataStore(context).createApplicationVersion(id, meta);\n+      return getAppMetadataStore(context).createLatestApplicationVersion(id, meta);\n+    }, ConflictException.class);\n+  }\n+\n+  @Override\n+  public int addApplication(ApplicationId id, ApplicationMeta meta, boolean isLatest) throws ConflictException {\n+    return TransactionRunners.run(transactionRunner, context -> {\n+      return getAppMetadataStore(context).createApplicationVersion(id, meta, isLatest);\n     }, ConflictException.class);\n   }\n "
        },
        {
            "sha": "0544abe726d846c72dbb13dcbced267c1b3f43a0",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/gateway/handlers/OperationsDashboardHttpHandlerTest.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fgateway%2Fhandlers%2FOperationsDashboardHttpHandlerTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fgateway%2Fhandlers%2FOperationsDashboardHttpHandlerTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fgateway%2Fhandlers%2FOperationsDashboardHttpHandlerTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -301,7 +301,7 @@ private void addAppSpecs() throws ConflictException {\n     ApplicationMeta meta = new ApplicationMeta(dummyAppSpec1.getName(), dummyAppSpec1,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(APP1_ID, meta);\n+    store.addLatestApplication(APP1_ID, meta);\n     WorkflowSpecification scheduledWorfklow2 =\n       new WorkflowSpecification(\"DummyClass\", SCHEDULED_PROG2_ID.getProgram(), \"scheduled workflow\",\n                                 Collections.emptyMap(), Collections.emptyList(), Collections.emptyMap(),\n@@ -319,7 +319,7 @@ private void addAppSpecs() throws ConflictException {\n     meta = new ApplicationMeta(dummyAppSpec2.getName(), dummyAppSpec2,\n                                new ChangeDetail(null, null, null,\n                                                 System.currentTimeMillis()));\n-    store.addApplication(APP2_ID, meta);\n+    store.addLatestApplication(APP2_ID, meta);\n   }\n \n   /**"
        },
        {
            "sha": "13cc80c823fa389e8c5dc7a6882b82426729a1fe",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/PreferencesHttpHandlerInternalTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fservices%2Fhttp%2Fhandlers%2FPreferencesHttpHandlerInternalTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fservices%2Fhttp%2Fhandlers%2FPreferencesHttpHandlerInternalTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fservices%2Fhttp%2Fhandlers%2FPreferencesHttpHandlerInternalTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -54,7 +54,7 @@ private void addApplication(String namespace, Application app) throws ConflictEx\n     ApplicationMeta meta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(new ApplicationId(namespace, appSpec.getName()), meta);\n+    store.addLatestApplication(new ApplicationId(namespace, appSpec.getName()), meta);\n   }\n \n   @Test"
        },
        {
            "sha": "13d4e68254a165f638fc5abbba7375a75c646d31",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/services/http/handlers/PreferencesHttpHandlerTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fservices%2Fhttp%2Fhandlers%2FPreferencesHttpHandlerTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fservices%2Fhttp%2Fhandlers%2FPreferencesHttpHandlerTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fservices%2Fhttp%2Fhandlers%2FPreferencesHttpHandlerTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -55,7 +55,7 @@ private void addApplication(String namespace, Application app) throws ConflictEx\n     ApplicationMeta meta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(new ApplicationId(namespace, appSpec.getName()), meta);\n+    store.addLatestApplication(new ApplicationId(namespace, appSpec.getName()), meta);\n   }\n \n   @Test"
        },
        {
            "sha": "7fe5232ee5665181ca3e9c04fd907981ef84471c",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/store/AppMetadataStoreTest.java",
            "status": "modified",
            "additions": 52,
            "deletions": 5,
            "changes": 57,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FAppMetadataStoreTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FAppMetadataStoreTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FAppMetadataStoreTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -19,13 +19,16 @@\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Lists;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n import io.cdap.cdap.AllProgramsApp;\n import io.cdap.cdap.api.app.ApplicationSpecification;\n import io.cdap.cdap.api.artifact.ArtifactId;\n import io.cdap.cdap.app.store.ScanApplicationsRequest;\n import io.cdap.cdap.common.app.RunIds;\n import io.cdap.cdap.common.utils.ProjectInfo;\n import io.cdap.cdap.internal.AppFabricTestHelper;\n+import io.cdap.cdap.internal.app.ApplicationSpecificationAdapter;\n import io.cdap.cdap.internal.app.DefaultApplicationSpecification;\n import io.cdap.cdap.internal.app.deploy.Specifications;\n import io.cdap.cdap.internal.app.runtime.SystemArguments;\n@@ -40,8 +43,12 @@\n import io.cdap.cdap.proto.id.ProgramReference;\n import io.cdap.cdap.proto.id.ProgramRunId;\n import io.cdap.cdap.spi.data.SortOrder;\n+import io.cdap.cdap.spi.data.StructuredTable;\n+import io.cdap.cdap.spi.data.table.field.Field;\n+import io.cdap.cdap.spi.data.table.field.Fields;\n import io.cdap.cdap.spi.data.transaction.TransactionRunner;\n import io.cdap.cdap.spi.data.transaction.TransactionRunners;\n+import io.cdap.cdap.store.StoreDefinition;\n import java.io.IOException;\n import java.time.Instant;\n import java.util.ArrayList;\n@@ -1365,7 +1372,7 @@ public void testConcurrentCreateAppFirstVersion() throws Exception {\n     String appName = \"application1\";\n     ArtifactId artifactId = NamespaceId.DEFAULT.artifact(\"testArtifact\", \"1.0\").toApiArtifactId();\n     ApplicationReference appRef = new ApplicationReference(NamespaceId.DEFAULT, appName);\n-    \n+\n     // Concurrently deploy different fist version of the same application\n     int numThreads = 10;\n     AtomicInteger idGenerator = new AtomicInteger();\n@@ -1378,7 +1385,7 @@ public void testConcurrentCreateAppFirstVersion() throws Exception {\n         ApplicationMeta meta = new ApplicationMeta(spec.getName(), spec,\n                                                    new ChangeDetail(null, null, null,\n                                                                     creationTimeMillis + id));\n-        metaStore.createApplicationVersion(appId, meta);\n+        metaStore.createLatestApplicationVersion(appId, meta);\n       })\n     );\n \n@@ -1409,7 +1416,7 @@ public void testConcurrentCreateAppFirstVersion() throws Exception {\n       latestVersionCount.set(latestVersions.size());\n       appEditNumber.set(metaStore.getApplicationEditNumber(appRef));\n     });\n-    \n+\n     // There can only be one latest version\n     Assert.assertEquals(1, latestVersionCount.get());\n     Assert.assertEquals(numThreads, allVersionsCount.get());\n@@ -1432,7 +1439,7 @@ public void testConcurrentCreateAppAfterTheFirstVersion() throws Exception {\n       ApplicationMeta meta = new ApplicationMeta(spec.getName(), spec,\n                                                  new ChangeDetail(null, null, null,\n                                                                   creationTimeMillis + id));\n-      metaStore.createApplicationVersion(appId, meta);\n+      metaStore.createLatestApplicationVersion(appId, meta);\n     });\n \n     // Concurrently deploy different versions of the same application\n@@ -1446,7 +1453,7 @@ public void testConcurrentCreateAppAfterTheFirstVersion() throws Exception {\n         ApplicationMeta meta = new ApplicationMeta(spec.getName(), spec,\n                                                    new ChangeDetail(null, null, null,\n                                                                     creationTimeMillis + id));\n-        metaStore.createApplicationVersion(appId, meta);\n+        metaStore.createLatestApplicationVersion(appId, meta);\n       })\n     );\n \n@@ -1528,6 +1535,46 @@ public void testDeleteCompletedRunsStartedBefore() throws Exception {\n         });\n   }\n \n+  /**\n+   * Testcase for getting the latest application, where the application was deployed\n+   * before 6.8.0 (where the latest column is not set).\n+   * In this case, first insert a row in app spec table with the latest column set to null.\n+   * This step is expected to fail in the NoSql implementation.\n+   */\n+  @Test\n+  public void testGetLatestOnLegacyRows() throws Exception {\n+    Gson GSON = ApplicationSpecificationAdapter.addTypeAdapters(new GsonBuilder()).create();\n+    // insert a row in appspec table with latest column set to null\n+    String appName = \"legacy_app_without_latest\";\n+    String appVersion = ApplicationId.DEFAULT_VERSION;\n+    ApplicationReference appRef = new ApplicationReference(NamespaceId.DEFAULT, appName);\n+\n+    ArtifactId artifactId = NamespaceId.DEFAULT.artifact(\"testArtifact\", \"1.0\").toApiArtifactId();\n+    ApplicationId appId = appRef.app(appVersion);\n+    ApplicationSpecification spec = createDummyAppSpec(appId.getApplication(), appId.getVersion(), artifactId);\n+    ApplicationMeta appMeta = new ApplicationMeta(appName, spec, null, null);\n+\n+    TransactionRunners.run(transactionRunner, context -> {\n+      AppMetadataStore metaStore = AppMetadataStore.create(context);\n+      metaStore.createLatestApplicationVersion(appId, appMeta);\n+      StructuredTable appSpecTable = context.getTable(\n+          StoreDefinition.AppMetadataStore.APPLICATION_SPECIFICATIONS);\n+\n+      List<Field<?>> fields = metaStore.getApplicationPrimaryKeys(\n+          NamespaceId.DEFAULT.getNamespace(), appName, appVersion);\n+      fields.add(Fields.booleanField(StoreDefinition.AppMetadataStore.LATEST_FIELD, null));\n+      appSpecTable.upsert(fields);\n+    });\n+\n+    ApplicationMeta latestAppMeta = TransactionRunners.run(transactionRunner, context -> {\n+      AppMetadataStore metaStore = AppMetadataStore.create(context);\n+      return metaStore.getLatest(appRef);\n+    });\n+\n+    Assert.assertEquals(appName, latestAppMeta.getId());\n+    Assert.assertEquals(appVersion, latestAppMeta.getSpec().getAppVersion());\n+  }\n+\n   /**\n    * Creates a new run of {@code programRunId} in the completed state with a starting time of {@code\n    * startingTime} and returns its corresponding run id."
        },
        {
            "sha": "ec8f8574bd64330757bd2c552f631d9a8e970d5a",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/store/DefaultStoreTest.java",
            "status": "modified",
            "additions": 48,
            "deletions": 46,
            "changes": 94,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FDefaultStoreTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FDefaultStoreTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FDefaultStoreTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -159,7 +159,7 @@ public void testLoadingProgram() throws Exception {\n     ApplicationMeta appMeta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     ProgramDescriptor descriptor = store.loadProgram(appId.mr(\"mrJob1\"));\n     Assert.assertNotNull(descriptor);\n@@ -494,7 +494,7 @@ public void testAddApplication() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(\"application1\", spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     spec = store.getApplication(appId);\n     Assert.assertNotNull(spec);\n@@ -507,12 +507,12 @@ public void testUpdateChangedApplication() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(\"application1\", Specifications.from(new FooApp()),\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(id, appMeta);\n+    store.addLatestApplication(id, appMeta);\n     // update\n     ApplicationMeta appMetaUpdate = new ApplicationMeta(\"application1\", Specifications.from(new ChangedFooApp()),\n                                                         new ChangeDetail(null, null, null,\n                                                                          System.currentTimeMillis()));\n-    store.addApplication(id, appMetaUpdate);\n+    store.addLatestApplication(id, appMetaUpdate);\n \n     ApplicationSpecification spec = store.getApplication(id);\n     Assert.assertNotNull(spec);\n@@ -523,15 +523,18 @@ public void testUpdateChangedApplication() throws ConflictException {\n   public void testAddApplicationWithoutMarkingLatest()\n       throws ConflictException {\n     long creationTime = System.currentTimeMillis();\n-    ApplicationId appId = new ApplicationId(\"account1\", \"app1\");\n-    ApplicationMeta appMeta = new ApplicationMeta(\"app1\", Specifications.from(new FooApp()),\n-        new ChangeDetail(null, null, null, creationTime), null, false);\n-    store.addApplication(appId, appMeta);\n+    String appName = \"notLatestApp1\";\n+    ApplicationId appId = new ApplicationId(\"account1\", appName, \"v1\");\n+    ApplicationMeta appMeta = new ApplicationMeta(appName, Specifications.from(new FooApp()),\n+        new ChangeDetail(null, null, null, creationTime), null);\n+    store.addApplication(appId, appMeta, false);\n \n     ApplicationMeta storedMeta = store.getApplicationMetadata(appId);\n-    Assert.assertEquals(\"app1\", storedMeta.getId());\n+    Assert.assertEquals(appName, storedMeta.getId());\n     Assert.assertEquals(creationTime, storedMeta.getChange().getCreationTimeMillis());\n-    Assert.assertFalse(storedMeta.getIsLatest());\n+\n+    ApplicationMeta latestMeta = store.getLatest(appId.getAppReference());\n+    Assert.assertNull(latestMeta);\n   }\n \n   @Test\n@@ -541,26 +544,24 @@ public void testMarkApplicationsLatestWithNewApps()\n     // Add 2 new applications without marking them latest\n     ApplicationId appId1 = new ApplicationId(\"account1\", \"newApp1\");\n     ApplicationMeta appMeta1 = new ApplicationMeta(\"newApp1\", Specifications.from(new FooApp()),\n-        new ChangeDetail(null, null, null, creationTime), null, false);\n-    store.addApplication(appId1, appMeta1);\n+        new ChangeDetail(null, null, null, creationTime), null);\n+    store.addApplication(appId1, appMeta1, false);\n \n     ApplicationId appId2 = new ApplicationId(\"account1\", \"newApp2\");\n     ApplicationMeta appMeta2 = new ApplicationMeta(\"newApp2\", Specifications.from(new FooApp()),\n-        new ChangeDetail(null, null, null, creationTime), null, false);\n-    store.addApplication(appId2, appMeta2);\n+        new ChangeDetail(null, null, null, creationTime), null);\n+    store.addApplication(appId2, appMeta2, false);\n \n     // Now mark them as latest in bulk\n     store.markApplicationsLatest(Arrays.asList(appId1, appId2));\n \n-    ApplicationMeta storedMeta1 = store.getApplicationMetadata(appId1);\n+    ApplicationMeta storedMeta1 = store.getLatest(appId1.getAppReference());\n     Assert.assertEquals(\"newApp1\", storedMeta1.getId());\n     Assert.assertEquals(creationTime, storedMeta1.getChange().getCreationTimeMillis());\n-    Assert.assertTrue(storedMeta1.getIsLatest());\n \n-    ApplicationMeta storedMeta2 = store.getApplicationMetadata(appId2);\n+    ApplicationMeta storedMeta2 = store.getLatest(appId2.getAppReference());\n     Assert.assertEquals(\"newApp2\", storedMeta2.getId());\n     Assert.assertEquals(creationTime, storedMeta2.getChange().getCreationTimeMillis());\n-    Assert.assertTrue(storedMeta2.getIsLatest());\n   }\n \n   @Test\n@@ -576,28 +577,29 @@ public void testMarkApplicationsLatestWithExistingLatest()\n     ApplicationId appIdV1 = new ApplicationId(\"account1\", appName, oldVersion);\n     ApplicationMeta appMetaV1 = new ApplicationMeta(appName, Specifications.from(new FooApp(), appName, oldVersion),\n         new ChangeDetail(null, null, null, creationTime));\n-    store.addApplication(appIdV1, appMetaV1);\n+    store.addLatestApplication(appIdV1, appMetaV1);\n \n     // Add a new version of the application without marking latest\n     ApplicationId appIdV2 = new ApplicationId(\"account1\", appName, newVersion);\n     ApplicationMeta appMetaV2 = new ApplicationMeta(appName, Specifications.from(new FooApp(), appName, newVersion),\n-        new ChangeDetail(null, null, null, v2CreationTime), null, false);\n-    store.addApplication(appIdV2, appMetaV2);\n+        new ChangeDetail(null, null, null, v2CreationTime), null);\n+    store.addApplication(appIdV2, appMetaV2, false);\n \n     // Now mark the new version as latest\n     store.markApplicationsLatest(Collections.singletonList(appIdV2));\n+    ApplicationMeta latestMeta = store.getLatest(appIdV1.getAppReference());\n \n     ApplicationMeta storedMetaV1 = store.getApplicationMetadata(appIdV1);\n     Assert.assertEquals(appName, storedMetaV1.getId());\n     Assert.assertEquals(oldVersion, storedMetaV1.getSpec().getAppVersion());\n     Assert.assertEquals(creationTime, storedMetaV1.getChange().getCreationTimeMillis());\n-    Assert.assertFalse(storedMetaV1.getIsLatest());\n+    Assert.assertNotEquals(latestMeta.getSpec().getAppVersion(), storedMetaV1.getSpec().getAppVersion());\n \n     ApplicationMeta storedMetaV2 = store.getApplicationMetadata(appIdV2);\n     Assert.assertEquals(appName, storedMetaV2.getId());\n     Assert.assertEquals(newVersion, storedMetaV2.getSpec().getAppVersion());\n     Assert.assertEquals(v2CreationTime, storedMetaV2.getChange().getCreationTimeMillis());\n-    Assert.assertTrue(storedMetaV2.getIsLatest());\n+    Assert.assertEquals(latestMeta.getSpec().getAppVersion(), storedMetaV2.getSpec().getAppVersion());\n   }\n \n   @Test(expected = ApplicationNotFoundException.class)\n@@ -620,7 +622,7 @@ public void testUpdateApplicationScmMeta()\n         new ChangeDetail(null, null, null,\n             System.currentTimeMillis()), null);\n \n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n     Map<ApplicationId, SourceControlMeta> updateRequests = new HashMap<>();\n     updateRequests.put(appId, new SourceControlMeta(\"updated-file-hash\"));\n     store.updateApplicationSourceControlMeta(updateRequests);\n@@ -640,7 +642,7 @@ public void testUpdateApplicationScmMetaWithNonExistingAppIds()\n         new ChangeDetail(null, null, null,\n             System.currentTimeMillis()), new SourceControlMeta(\"initial-file-hash\"));\n \n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n     // The following appId is not added to the store\n     ApplicationId appId2 = new ApplicationId(\"account1\", \"application2\");\n \n@@ -708,7 +710,7 @@ public void testServiceDeletion() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     AbstractApplication newApp = new AppWithNoServices();\n \n@@ -728,7 +730,7 @@ public void testServiceInstances() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     // Test setting of service instances\n     ProgramId programId = appId.program(ProgramType.SERVICE, \"NoOpService\");\n@@ -755,7 +757,7 @@ public void testWorkerInstances() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     ProgramId programId = appId.worker(AppWithWorker.WORKER);\n     int instancesFromSpec = spec.getWorkers().get(AppWithWorker.WORKER).getInstances();\n@@ -776,7 +778,7 @@ public void testRemoveAll() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     Assert.assertNotNull(store.getApplication(appId));\n \n@@ -794,7 +796,7 @@ public void testRemoveApplication() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     Assert.assertNotNull(store.getApplication(appId));\n \n@@ -818,7 +820,7 @@ public void testProgramRunCount() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     // add some run records to workflow and service\n     for (int i = 0; i < 5; i++) {\n@@ -864,7 +866,7 @@ public void testRuntimeArgsDeletion() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     Assert.assertNotNull(store.getApplication(appId));\n \n@@ -916,14 +918,14 @@ public void testHistoryDeletion() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId1, appMeta);\n+    store.addLatestApplication(appId1, appMeta);\n \n     spec = Specifications.from(new AppWithServices());\n     ApplicationId appId2 = namespaceId.app(spec.getName());\n     appMeta = new ApplicationMeta(spec.getName(), spec,\n                                   new ChangeDetail(null, null, null,\n                                                    System.currentTimeMillis()));\n-    store.addApplication(appId2, appMeta);\n+    store.addLatestApplication(appId2, appMeta);\n \n     ArtifactId artifactId = appId1.getNamespaceId().artifact(\"testArtifact\", \"1.0\").toApiArtifactId();\n \n@@ -986,7 +988,7 @@ public void testRunsLimit() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     ProgramId mapreduceProgramId = new ApplicationId(\"testRunsLimit\", spec.getName())\n       .mr(AllProgramsApp.NoOpMR.class.getSimpleName());\n@@ -1017,7 +1019,7 @@ public void testCheckDeletedProgramSpecs() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     Set<String> specsToBeVerified = Sets.newHashSet();\n     specsToBeVerified.addAll(spec.getMapReduce().keySet());\n@@ -1063,7 +1065,7 @@ protected void testScanApplications(Store store) throws ConflictException {\n       ApplicationMeta appMeta = new ApplicationMeta(appName, appSpec,\n                                                     new ChangeDetail(null, null, null,\n                                                                      System.currentTimeMillis()));\n-      store.addApplication(new ApplicationId(NamespaceId.DEFAULT.getNamespace(), appName), appMeta);\n+      store.addLatestApplication(new ApplicationId(NamespaceId.DEFAULT.getNamespace(), appName), appMeta);\n     }\n \n     // Mimicking editing the first count / 2 apps\n@@ -1073,7 +1075,7 @@ protected void testScanApplications(Store store) throws ConflictException {\n       ApplicationMeta appMeta = new ApplicationMeta(appName, appSpec,\n           new ChangeDetail(\"edited\" + i, null, null,\n               System.currentTimeMillis()));\n-      store.addApplication(new ApplicationId(NamespaceId.DEFAULT.getNamespace(), appName, version), appMeta);\n+      store.addLatestApplication(new ApplicationId(NamespaceId.DEFAULT.getNamespace(), appName, version), appMeta);\n     }\n \n     List<ApplicationId> allAppsVersion = new ArrayList<>();\n@@ -1118,9 +1120,9 @@ public void testScanApplicationsWithNamespace(Store store) throws ConflictExcept\n       ApplicationMeta appMeta = new ApplicationMeta(appName, appSpec,\n                                                     new ChangeDetail(null, null, null,\n                                                                      System.currentTimeMillis()));\n-      store.addApplication(new ApplicationId(NamespaceId.DEFAULT.getNamespace(), appName), appMeta);\n+      store.addLatestApplication(new ApplicationId(NamespaceId.DEFAULT.getNamespace(), appName), appMeta);\n       appName = \"test\" + (2 * i + 1);\n-      store.addApplication(new ApplicationId(NamespaceId.CDAP.getNamespace(), appName), appMeta);\n+      store.addLatestApplication(new ApplicationId(NamespaceId.CDAP.getNamespace(), appName), appMeta);\n     }\n \n     List<ApplicationId> apps = new ArrayList<ApplicationId>();\n@@ -1185,7 +1187,7 @@ public void testCheckDeletedWorkflow() throws ConflictException {\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     Set<String> specsToBeDeleted = Sets.newHashSet();\n     specsToBeDeleted.addAll(spec.getWorkflows().keySet());\n@@ -1330,7 +1332,7 @@ public void testStateRemovedOnRemoveApplication() throws ApplicationNotFoundExce\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n     store.saveState(new AppStateKeyValue(namespaceId, spec.getName(), stateKey, stateValue));\n \n     Assert.assertNotNull(store.getApplication(appId));\n@@ -1357,7 +1359,7 @@ public void testStateRemovedOnRemoveAll() throws ApplicationNotFoundException, C\n     ApplicationMeta appMeta = new ApplicationMeta(spec.getName(), spec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n     store.saveState(new AppStateKeyValue(namespaceId, appName, stateKey, stateValue));\n \n     Assert.assertNotNull(store.getApplication(appId));\n@@ -1388,7 +1390,7 @@ public void testListRunsWithLegacyRows() throws ConflictException {\n     List<ApplicationId> expectedApps = new ArrayList<>();\n \n     // Insert a row that is null for changeDetail\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n     expectedApps.add(appId);\n \n     ApplicationId newVersionAppId = appId.getAppReference().app(\"new_version\");\n@@ -1399,7 +1401,7 @@ public void testListRunsWithLegacyRows() throws ConflictException {\n                                                      new ChangeDetail(null, null,\n                                                                       null, currentTime));\n     // Insert a second version\n-    store.addApplication(newVersionAppId, newAppMeta);\n+    store.addLatestApplication(newVersionAppId, newAppMeta);\n     expectedApps.add(newVersionAppId);\n \n     // Insert a third version\n@@ -1408,7 +1410,7 @@ public void testListRunsWithLegacyRows() throws ConflictException {\n     ApplicationMeta anotherAppMeta = new ApplicationMeta(anotherVersionAppId.getApplication(), spec,\n                                                          new ChangeDetail(null, null,\n                                                                           null, currentTime + 1000));\n-    store.addApplication(anotherVersionAppId, anotherAppMeta);\n+    store.addLatestApplication(anotherVersionAppId, anotherAppMeta);\n     expectedApps.add(anotherVersionAppId);\n \n     // Reverse it because we want DESC order"
        },
        {
            "sha": "a0c0d6b4571a315aaa2357d2674bf70274e6bd1d",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/app/store/NoSqlAppMetadataStoreTest.java",
            "status": "modified",
            "additions": 10,
            "deletions": 0,
            "changes": 10,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FNoSqlAppMetadataStoreTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FNoSqlAppMetadataStoreTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fapp%2Fstore%2FNoSqlAppMetadataStoreTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -50,4 +50,14 @@ public void testScanApplicationsReverse() {\n   public void testScanApplicationsWithNamespaceReverse() {\n     super.testScanApplicationsWithNamespaceReverse();\n   }\n+\n+  /**\n+   * This testcase tries to create a row in the app spec table, with the latest column set\n+   * to null (To test the getLatest method for applications deployed before v6.8.0). Setting\n+   * a Boolean column to null in the NoSqlStructuredTable is expected to throw a NullPointerException.\n+   */\n+  @Override @Test(expected = NullPointerException.class)\n+  public void testGetLatestOnLegacyRows() throws Exception {\n+    super.testGetLatestOnLegacyRows();\n+  }\n }"
        },
        {
            "sha": "31853154e8fed717da46a046514c0719064da0b0",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/internal/profile/ProfileServiceTest.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fprofile%2FProfileServiceTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fprofile%2FProfileServiceTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Finternal%2Fprofile%2FProfileServiceTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -354,7 +354,7 @@ public void testProfileDeletion() throws Exception {\n     ApplicationMeta appMeta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                   new ChangeDetail(null, null, null,\n                                                                    System.currentTimeMillis()));\n-    store.addApplication(appId, appMeta);\n+    store.addLatestApplication(appId, appMeta);\n \n     ProgramId programId = NamespaceId.DEFAULT.app(appSpec.getName()).workflow(SampleWorkflow.NAME);\n     ArtifactId artifactId = NamespaceId.DEFAULT.artifact(\"testArtifact\", \"1.0\").toApiArtifactId();"
        },
        {
            "sha": "3c08eb81beca98ef896a0f7d1d05e712e3cfe86e",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/metadata/LineageAdminTest.java",
            "status": "modified",
            "additions": 3,
            "deletions": 3,
            "changes": 6,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fmetadata%2FLineageAdminTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fmetadata%2FLineageAdminTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fmetadata%2FLineageAdminTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -495,7 +495,7 @@ public void testWorkflowLineage() throws ConflictException {\n     ApplicationMeta meta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(testApp, meta);\n+    store.addLatestApplication(testApp, meta);\n     LineageAdmin lineageAdmin = new LineageAdmin(lineageReader, store);\n \n     // Add accesses for D3 -> P2 -> D2 -> P1 -> D1 <-> P3\n@@ -602,7 +602,7 @@ public void testWorkflowLineage() throws ConflictException {\n         new Relation(dataset1, program3, AccessType.UNKNOWN, twillRunId(run3))\n       ),\n       oneLevelLineage.getRelations());\n-    \n+\n     // Assert that in a different namespace both lineage and metadata should be empty\n     NamespaceId customNamespace = new NamespaceId(\"custom_namespace\");\n     DatasetId customDataset1 = customNamespace.dataset(dataset1.getEntityName());\n@@ -671,7 +671,7 @@ public void testLocalDatasetsInWorkflow() throws Exception {\n     ApplicationMeta meta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(testApp, meta);\n+    store.addLatestApplication(testApp, meta);\n     LineageAdmin lineageAdmin = new LineageAdmin(lineageReader, store);\n \n     // Add accesses for D1 -|"
        },
        {
            "sha": "a61d28a4f9f8a4da5832a7b632b412fb5e6aa7d1",
            "filename": "cdap-app-fabric/src/test/java/io/cdap/cdap/metadata/MetadataSubscriberServiceTest.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/cdapio/cdap/blob/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fmetadata%2FMetadataSubscriberServiceTest.java",
            "raw_url": "https://github.com/cdapio/cdap/raw/30e14e29ee66d89817723275f3032b4773aab4e4/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fmetadata%2FMetadataSubscriberServiceTest.java",
            "contents_url": "https://api.github.com/repos/cdapio/cdap/contents/cdap-app-fabric%2Fsrc%2Ftest%2Fjava%2Fio%2Fcdap%2Fcdap%2Fmetadata%2FMetadataSubscriberServiceTest.java?ref=30e14e29ee66d89817723275f3032b4773aab4e4",
            "patch": "@@ -447,7 +447,7 @@ public void testProfileMetadata() throws Exception {\n     ApplicationMeta meta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(appId, meta);\n+    store.addLatestApplication(appId, meta);\n \n     // set default namespace to use the profile, since now MetadataSubscriberService is not started,\n     // it should not affect the mds\n@@ -591,7 +591,7 @@ public void testProfileMetadataWithNoProfilePreferences() throws Exception {\n     ApplicationMeta meta = new ApplicationMeta(appSpec.getName(), appSpec,\n                                                new ChangeDetail(null, null, null,\n                                                                 System.currentTimeMillis()));\n-    store.addApplication(appId, meta);\n+    store.addLatestApplication(appId, meta);\n \n     // set default namespace to use the profile, since now MetadataSubscriberService is not started,\n     // it should not affect the mds"
        }
    ]
}