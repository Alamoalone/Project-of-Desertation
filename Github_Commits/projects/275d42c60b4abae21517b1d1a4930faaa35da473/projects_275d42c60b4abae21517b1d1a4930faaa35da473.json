{
    "sha": "275d42c60b4abae21517b1d1a4930faaa35da473",
    "node_id": "C_kwDOAhHbBdoAKDI3NWQ0MmM2MGI0YWJhZTIxNTE3YjFkMWE0OTMwZmFhYTM1ZGE0NzM",
    "commit": {
        "author": {
            "name": "Cardman",
            "email": "f.desrochettes@gmail.com",
            "date": "2023-12-04T14:57:18Z"
        },
        "committer": {
            "name": "Cardman",
            "email": "f.desrochettes@gmail.com",
            "date": "2023-12-04T14:57:18Z"
        },
        "message": "fix null pointer exception when retrieving errors",
        "tree": {
            "sha": "46bc38d6fc44eb4384cc45e56569ef823926bd63",
            "url": "https://api.github.com/repos/Cardman/projects/git/trees/46bc38d6fc44eb4384cc45e56569ef823926bd63"
        },
        "url": "https://api.github.com/repos/Cardman/projects/git/commits/275d42c60b4abae21517b1d1a4930faaa35da473",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/Cardman/projects/commits/275d42c60b4abae21517b1d1a4930faaa35da473",
    "html_url": "https://github.com/Cardman/projects/commit/275d42c60b4abae21517b1d1a4930faaa35da473",
    "comments_url": "https://api.github.com/repos/Cardman/projects/commits/275d42c60b4abae21517b1d1a4930faaa35da473/comments",
    "author": {
        "login": "Cardman",
        "id": 12151671,
        "node_id": "MDQ6VXNlcjEyMTUxNjcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/12151671?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Cardman",
        "html_url": "https://github.com/Cardman",
        "followers_url": "https://api.github.com/users/Cardman/followers",
        "following_url": "https://api.github.com/users/Cardman/following{/other_user}",
        "gists_url": "https://api.github.com/users/Cardman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Cardman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Cardman/subscriptions",
        "organizations_url": "https://api.github.com/users/Cardman/orgs",
        "repos_url": "https://api.github.com/users/Cardman/repos",
        "events_url": "https://api.github.com/users/Cardman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Cardman/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "Cardman",
        "id": 12151671,
        "node_id": "MDQ6VXNlcjEyMTUxNjcx",
        "avatar_url": "https://avatars.githubusercontent.com/u/12151671?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Cardman",
        "html_url": "https://github.com/Cardman",
        "followers_url": "https://api.github.com/users/Cardman/followers",
        "following_url": "https://api.github.com/users/Cardman/following{/other_user}",
        "gists_url": "https://api.github.com/users/Cardman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Cardman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Cardman/subscriptions",
        "organizations_url": "https://api.github.com/users/Cardman/orgs",
        "repos_url": "https://api.github.com/users/Cardman/repos",
        "events_url": "https://api.github.com/users/Cardman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Cardman/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "b782b5427f9b778aac6f03e1e9ff12bb01e9e518",
            "url": "https://api.github.com/repos/Cardman/projects/commits/b782b5427f9b778aac6f03e1e9ff12bb01e9e518",
            "html_url": "https://github.com/Cardman/projects/commit/b782b5427f9b778aac6f03e1e9ff12bb01e9e518"
        }
    ],
    "stats": {
        "total": 271,
        "additions": 172,
        "deletions": 99
    },
    "files": [
        {
            "sha": "2d42f5eb05ca7e8fc58125fe2bb561daec32712a",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/exec/opers/ExecCompoundAffectationExplicitCustOperation.java",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationExplicitCustOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationExplicitCustOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationExplicitCustOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -2,7 +2,6 @@\n \n import code.expressionlanguage.ContextEl;\n import code.expressionlanguage.exec.StackCall;\n-import code.expressionlanguage.exec.util.ImplicitMethods;\n import code.expressionlanguage.exec.variables.ArgumentsPair;\n import code.expressionlanguage.fwd.blocks.ExecTypeFunction;\n import code.expressionlanguage.fwd.opers.ExecOperationContent;\n@@ -17,8 +16,8 @@ public final class ExecCompoundAffectationExplicitCustOperation extends ExecComp\n     private final ExecTypeFunction pair;\n \n \n-    public ExecCompoundAffectationExplicitCustOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, ExecStaticFctContent _staticEltContent, ExecTypeFunction _pair, ImplicitMethods _converter, StringList _names, boolean _staticPostEltContent) {\n-        super(_opCont, _operatorContent, _converter, _names, _staticPostEltContent);\n+    public ExecCompoundAffectationExplicitCustOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, ExecStaticFctContent _staticEltContent, ExecTypeFunction _pair, StringList _names, boolean _staticPostEltContent) {\n+        super(_opCont, _operatorContent, _names, _staticPostEltContent);\n         pair = _pair;\n         staticEltContent = _staticEltContent;\n     }"
        },
        {
            "sha": "ec067bd5df02ec296475787be3762b71692043d5",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/exec/opers/ExecCompoundAffectationOperation.java",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -16,12 +16,11 @@\n \n public abstract class ExecCompoundAffectationOperation extends ExecAbstractAffectOperation implements CallExecSimpleOperation,CompoundedOperator {\n \n-    private final ImplicitMethods converter;\n+    private final ImplicitMethods converter = new ImplicitMethods();\n     private final boolean staticPostEltContent;\n \n-    protected ExecCompoundAffectationOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, ImplicitMethods _converter, StringList _names, boolean _staticPostEltContent) {\n+    protected ExecCompoundAffectationOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, StringList _names, boolean _staticPostEltContent) {\n         super(_opCont, _operatorContent, _names);\n-        converter = _converter;\n         staticPostEltContent = _staticPostEltContent;\n     }\n "
        },
        {
            "sha": "1f999c5e3bf07ee6ae156b427c4745c105ed0292",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/exec/opers/ExecCompoundAffectationStringOperation.java",
            "status": "modified",
            "additions": 2,
            "deletions": 2,
            "changes": 4,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationStringOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationStringOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecCompoundAffectationStringOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -23,8 +23,8 @@ public final class ExecCompoundAffectationStringOperation extends ExecCompoundAf\n \n     private final ExecOperSymbol symbol;\n \n-    public ExecCompoundAffectationStringOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, StringList _names, ExecOperSymbol _symbol, ImplicitMethods _converter, boolean _staticPostEltContent) {\n-        super(_opCont, _operatorContent, _converter, _names, _staticPostEltContent);\n+    public ExecCompoundAffectationStringOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, StringList _names, ExecOperSymbol _symbol, boolean _staticPostEltContent) {\n+        super(_opCont, _operatorContent, _names, _staticPostEltContent);\n         symbol = _symbol;\n     }\n "
        },
        {
            "sha": "142fba0b256d6ec49fe3bd9cfe83f8d37a2f325a",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/exec/opers/ExecExplicitOperatorOperation.java",
            "status": "modified",
            "additions": 6,
            "deletions": 3,
            "changes": 9,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecExplicitOperatorOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecExplicitOperatorOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecExplicitOperatorOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -17,16 +17,15 @@\n \n public final class ExecExplicitOperatorOperation extends ExecSettableCallFctOperation implements CallExecSimpleOperation,CompoundedOperator{\n \n-    private final ImplicitMethods converter;\n+    private final ImplicitMethods converter = new ImplicitMethods();\n     private final ExecTypeFunction pair;\n     private final ExecStaticFctContent staticFctContent;\n \n     private final ExecOperatorContent operatorContent;\n-    public ExecExplicitOperatorOperation(ExecOperationContent _opCont, boolean _intermediateDottedOperation, ExecStaticFctContent _staticFctContent, ExecTypeFunction _pair, ExecArrContent _exArr, ImplicitMethods _conv, ExecOperatorContent _operCont) {\n+    public ExecExplicitOperatorOperation(ExecOperationContent _opCont, boolean _intermediateDottedOperation, ExecStaticFctContent _staticFctContent, ExecTypeFunction _pair, ExecArrContent _exArr, ExecOperatorContent _operCont) {\n         super(_opCont, _intermediateDottedOperation,_exArr);\n         staticFctContent = _staticFctContent;\n         pair = _pair;\n-        converter = _conv;\n         operatorContent = _operCont;\n     }\n \n@@ -57,6 +56,10 @@ public void endCalculate(ContextEl _conf, IdMap<ExecOperationNode, ArgumentsPair\n         ExecQuickOperation.end(this,_conf,_nodes,_right,_stack,converter);\n     }\n \n+    public ImplicitMethods getConverter() {\n+        return converter;\n+    }\n+\n     public int getOffsetOper() {\n         return operatorContent.getOpOffset();\n     }"
        },
        {
            "sha": "d2cdaeeda4dd446c90ab47ea60f25b647e74c6e9",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/exec/opers/ExecQuickOperation.java",
            "status": "modified",
            "additions": 6,
            "deletions": 3,
            "changes": 9,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecQuickOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecQuickOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Fopers%2FExecQuickOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -16,14 +16,13 @@\n \n public final class ExecQuickOperation extends ExecMethodOperation implements AtomicExecCalculableOperation, CallExecSimpleOperation, CompoundedOperator {\n \n-    private final ImplicitMethods converter;\n+    private final ImplicitMethods converter = new ImplicitMethods();\n     private final ExecOperatorContent operatorContent;\n \n     private final ExecOperSymbol operSymbol;\n \n-    public ExecQuickOperation(ExecOperationContent _opCont, ImplicitMethods _converter, ExecOperatorContent _opera, ExecOperSymbol _op) {\n+    public ExecQuickOperation(ExecOperationContent _opCont, ExecOperatorContent _opera, ExecOperSymbol _op) {\n         super(_opCont);\n-        converter = _converter;\n         operatorContent = _opera;\n         operSymbol = _op;\n     }\n@@ -66,6 +65,10 @@ static void end(ExecMethodOperation _cur,ContextEl _conf, IdMap<ExecOperationNod\n         _cur.setSimpleArgument(_right,_conf,_nodes, _stack);\n     }\n \n+    public ImplicitMethods getConverter() {\n+        return converter;\n+    }\n+\n     public ExecOperSymbol getOperSymbol() {\n         return operSymbol;\n     }"
        },
        {
            "sha": "afca06ed4dab88adf52c689750b649f2ca2c7587",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/exec/util/ImplicitMethods.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Futil%2FImplicitMethods.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Futil%2FImplicitMethods.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Fexec%2Futil%2FImplicitMethods.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -20,7 +20,7 @@ public void setOwnerClass(ExecFormattedRootBlock _ownerClass) {\n     }\n \n     public static boolean isValidIndex(ImplicitMethods _impl,int _indexImplicit) {\n-        return _impl!=null&&_impl.isValidIndex(_indexImplicit);\n+        return _impl.isValidIndex(_indexImplicit);\n     }\n \n     public boolean isValidIndex(int _indexImplicit) {"
        },
        {
            "sha": "8ecae43ed1552af050e8574732dae6d196c7634c",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/fwd/blocks/FetchMemberUtil.java",
            "status": "modified",
            "additions": 29,
            "deletions": 31,
            "changes": 60,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Ffwd%2Fblocks%2FFetchMemberUtil.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Ffwd%2Fblocks%2FFetchMemberUtil.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Ffwd%2Fblocks%2FFetchMemberUtil.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -23,46 +23,44 @@ private FetchMemberUtil() {\n     }\n \n     public static void setImplicits(AnaClassArgumentMatching _ana, ImplicitMethods _implicitsOp, ImplicitMethods _implicitsTestOp, Forwards _forwards) {\n-        CustList<AnaFormattedRootBlock> implicits_ = _ana.getImplicits();\n-        ExecTypeFunction conv_ = null;\n-        ExecFormattedRootBlock formattedType_ = null;\n-        if (!implicits_.isEmpty()) {\n-            formattedType_ = ExecStaticEltContent.build(implicits_.first(), _forwards);\n-            conv_ = fetchOvTypeFunction(_ana.getMemberId(), _forwards);\n-        }\n-        if (conv_ != null) {\n-            _implicitsOp.getConverter().add(conv_);\n-            _implicitsOp.setOwnerClass(formattedType_);\n-        }\n-        CustList<AnaFormattedRootBlock> implicitsTest_ = _ana.getImplicitsTest();\n-        ExecTypeFunction convTest_ = null;\n-        ExecFormattedRootBlock formattedTypeTest_ = null;\n-        if (!implicitsTest_.isEmpty()) {\n-            formattedTypeTest_ = ExecStaticEltContent.build(implicitsTest_.first(), _forwards);\n-            convTest_ = fetchOvTypeFunction(_ana.getMemberIdTest(), _forwards);\n-        }\n+        impls(_implicitsOp, _forwards, _ana.getImplicits(), _ana.getMemberId());\n+        impls(_implicitsTestOp, _forwards, _ana.getImplicitsTest(), _ana.getMemberIdTest());\n+    }\n+\n+    private static void impls(ImplicitMethods _implicits, Forwards _forwards, CustList<AnaFormattedRootBlock> _impl, MemberId _id) {\n+        impls(_implicits, _forwards, _id, formatted(_impl));\n+    }\n+\n+    public static void impls(ClassMethodIdMemberIdTypeFct _f,ImplicitMethods _implicits, Forwards _forwards) {\n+        impls(_implicits,_forwards, _f.getMemberId(), _f.getImplicit().getFormatted());\n+    }\n+    private static void impls(ImplicitMethods _implicits, Forwards _forwards, MemberId _id, String _f) {\n+        ExecTypeFunction convTest_ = conv(_f, _id, _forwards);\n         if (convTest_ != null) {\n-            _implicitsTestOp.getConverter().add(convTest_);\n-            _implicitsTestOp.setOwnerClass(formattedTypeTest_);\n+            update(_implicits, convTest_, _f);\n+        }\n+    }\n+\n+    private static String formatted(CustList<AnaFormattedRootBlock> _i) {\n+        if (_i.isEmpty()) {\n+            return \"\";\n         }\n+        return _i.first().getFormatted();\n     }\n \n-    public static ImplicitMethods fetchImplicits(ClassMethodIdMemberIdTypeFct _id, Forwards _forwards) {\n-        return fetchImplicits(_id.getImplicit(),_id.getMemberId(),_forwards);\n+    private static void update(ImplicitMethods _converter, ExecTypeFunction _fct, String _formatted) {\n+        _converter.getConverter().add(_fct);\n+        _converter.setOwnerClass(new ExecFormattedRootBlock(_fct.getType(), _formatted));\n     }\n-    public static ImplicitMethods fetchImplicits(AnaFormattedRootBlock _clMet, MemberId _id, Forwards _forwards) {\n+\n+    private static ExecTypeFunction conv(String _formatted, MemberId _id, Forwards _forwards) {\n         ExecTypeFunction conv_ = null;\n-        if (!_clMet.getFormatted().isEmpty()) {\n+        if (!_formatted.isEmpty()) {\n             conv_ = fetchOvTypeFunction(_id, _forwards);\n         }\n-        if (conv_ != null) {\n-            ImplicitMethods converter_ = new ImplicitMethods();\n-            converter_.getConverter().add(conv_);\n-            converter_.setOwnerClass(new ExecFormattedRootBlock(conv_.getType(),_clMet.getFormatted()));\n-            return converter_;\n-        }\n-        return null;\n+        return conv_;\n     }\n+\n     public static CustList<ExecNamedFieldContent> namedFieldsContent(CustList<AnaNamedFieldContent> _ana, Forwards _fwd) {\n         CustList<ExecNamedFieldContent> list_ = new CustList<ExecNamedFieldContent>();\n         for (AnaNamedFieldContent a: _ana) {"
        },
        {
            "sha": "373902c11305e62e95faebee1c37aabf97758659",
            "filename": "desktop/applis/apps/core/common/expressionlanguage/src/main/java/code/expressionlanguage/fwd/blocks/ForwardInfos.java",
            "status": "modified",
            "additions": 49,
            "deletions": 17,
            "changes": 66,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Ffwd%2Fblocks%2FForwardInfos.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Ffwd%2Fblocks%2FForwardInfos.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fexpressionlanguage%2Fsrc%2Fmain%2Fjava%2Fcode%2Fexpressionlanguage%2Ffwd%2Fblocks%2FForwardInfos.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -1549,14 +1549,15 @@ private static ExecOperationNode procOperands(OperationNode _anaNode, Forwards _\n             return explicitOperator(_anaNode, _forwards);\n         }\n         if (_anaNode instanceof SemiAffectationOperation) {\n-            return semi((SemiAffectationOperation) _anaNode, _forwards);\n+            ExecCompoundAffectationOperation c_ = semi((SemiAffectationOperation) _anaNode, _forwards);\n+            return updateConv(_forwards, c_, (SemiAffectationOperation) _anaNode);\n         }\n         if (_anaNode instanceof SymbolOperation) {\n             SymbolOperation n_ = (SymbolOperation) _anaNode;\n             ClassMethodIdMemberIdTypeFct fct_ = n_.getFct();\n             AnaTypeFct pair_ = fct_.getFunction();\n             if (pair_ != null) {\n-                return new ExecExplicitOperatorOperation(new ExecOperationContent(_anaNode.getContent()),false, new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1), new ExecStaticEltContent(fct_, _forwards)), FetchMemberUtil.fetchFunctionOpPair(fct_, _forwards), new ExecArrContent(false), null, new ExecOperatorContent(n_.getOperatorContent()));\n+                return new ExecExplicitOperatorOperation(new ExecOperationContent(_anaNode.getContent()),false, new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1), new ExecStaticEltContent(fct_, _forwards)), FetchMemberUtil.fetchFunctionOpPair(fct_, _forwards), new ExecArrContent(false), new ExecOperatorContent(n_.getOperatorContent()));\n             }\n         }\n         return procGeneOperators(_anaNode, _forwards);\n@@ -1576,9 +1577,39 @@ private static ExecMethodOperation explicitOperator(OperationNode _anaNode, Forw\n             StringList names_ = _anaNode.getResultClass().getNames();\n             AnaCallFctContent callFctContent_ = m_.getCallFctContent();\n             ExecTypeFunction pair_ = FetchMemberUtil.fetchFunctionOpPair(callFctContent_.getMemberId(), _forwards);\n-            return new ExecCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()),m_.getOffsetOper()), new ExecStaticFctContent(callFctContent_, _forwards), pair_, FetchMemberUtil.fetchImplicits(m_.getConv(), _forwards), names_, m_.isPost());\n+            return updateConv(_forwards, new ExecCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()), m_.getOffsetOper()), new ExecStaticFctContent(callFctContent_, _forwards), pair_, names_, m_.isPost()), m_);\n         }\n-        return new ExecExplicitOperatorOperation(new ExecOperationContent(m_.getContent()), m_.isIntermediateDottedOperation(), new ExecStaticFctContent(m_.getCallFctContent(), _forwards), FetchMemberUtil.fetchFunctionOpPair(m_.getCallFctContent().getMemberId(), _forwards), new ExecArrContent(m_.getArrContent()), FetchMemberUtil.fetchImplicits(m_.getConv(), _forwards), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()),m_.getOffsetOper()));\n+        return updateConv(_forwards, new ExecExplicitOperatorOperation(new ExecOperationContent(m_.getContent()), m_.isIntermediateDottedOperation(), new ExecStaticFctContent(m_.getCallFctContent(), _forwards), FetchMemberUtil.fetchFunctionOpPair(m_.getCallFctContent().getMemberId(), _forwards), new ExecArrContent(m_.getArrContent()), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()), m_.getOffsetOper())), m_);\n+    }\n+\n+    private static ExecCompoundAffectationOperation updateConv(Forwards _forwards, ExecCompoundAffectationOperation _c, CompoundAffectationOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static ExecCompoundAffectationOperation updateConv(Forwards _forwards, ExecCompoundAffectationOperation _c, SemiAffectationOperation _m) {\n+        FetchMemberUtil.impls(_m.getConvTo(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static ExecCompoundAffectationExplicitCustOperation updateConv(Forwards _forwards, ExecCompoundAffectationExplicitCustOperation _c, ExplicitOperatorOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static ExecQuickOperation updateConv(Forwards _forwards, ExecQuickOperation _q, QuickOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _q.getConverter(), _forwards);\n+        return _q;\n+    }\n+\n+    private static ExecExplicitOperatorOperation updateConv(Forwards _forwards, ExecExplicitOperatorOperation _c, QuickOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static ExecExplicitOperatorOperation updateConv(Forwards _forwards, ExecExplicitOperatorOperation _exp, ExplicitOperatorOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _exp.getConverter(), _forwards);\n+        return _exp;\n     }\n \n     private static ExecLeafOperation finalVariable(FinalVariableOperation _anaNode) {\n@@ -1589,15 +1620,15 @@ private static ExecCompoundAffectationOperation semi(SemiAffectationOperation _a\n         StringList names_ = _anaNode.getResultClass().getNames();\n         ExecTypeFunction pair_ = FetchMemberUtil.fetchFunctionOpPair(_anaNode.getFct(), _forwards);\n         if (pair_.getFct() == null) {\n-            return new ExecCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),names_,new ExecOperDir(_anaNode.getSymbol()),FetchMemberUtil.fetchImplicits(_anaNode.getConvTo(), _forwards), _anaNode.isPost());\n+            return new ExecCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),names_,new ExecOperDir(_anaNode.getSymbol()), _anaNode.isPost());\n         }\n-        return new ExecCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),  new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(_anaNode.getFct(), _forwards)), pair_, FetchMemberUtil.fetchImplicits(_anaNode.getConvTo(), _forwards), names_, _anaNode.isPost());\n+        return new ExecCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),  new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(_anaNode.getFct(), _forwards)), pair_, names_, _anaNode.isPost());\n     }\n \n     private static ExecOperationNode procGeneOperators(OperationNode _anaNode, Forwards _forwards) {\n         if (_anaNode instanceof UnaryOperation) {\n             UnaryOperation m_ = (UnaryOperation) _anaNode;\n-            return new ExecQuickOperation(new ExecOperationContent(m_.getContent()),null, new ExecOperatorContent(m_.getOperatorContent()), new ExecOperDir(m_.getSymbol()));\n+            return new ExecQuickOperation(new ExecOperationContent(m_.getContent()), new ExecOperatorContent(m_.getOperatorContent()), new ExecOperDir(m_.getSymbol()));\n         }\n         if (_anaNode instanceof RandCodeOperation) {\n             RandCodeOperation m_ = (RandCodeOperation) _anaNode;\n@@ -1643,7 +1674,7 @@ private static ExecOperationNode procOperators(OperationNode _anaNode, Forwards\n         }\n         if (_anaNode instanceof EqOperation) {\n             EqOperation c_ = (EqOperation) _anaNode;\n-            return new ExecQuickOperation(new ExecOperationContent(c_.getContent()), null, new ExecOperatorContent(c_.getOperatorContent()), new ExecOperDir(c_.getSymbol()));\n+            return new ExecQuickOperation(new ExecOperationContent(c_.getContent()), new ExecOperatorContent(c_.getOperatorContent()), new ExecOperDir(c_.getSymbol()));\n         }\n         return procOper(_anaNode, _forwards);\n     }\n@@ -1657,13 +1688,13 @@ public static ExecOperSymbol oper(NumericOperation _m) {\n     }\n \n     private static ExecMethodOperation compare(CmpOperation _anaNode) {\n-        return new ExecQuickOperation(new ExecOperationContent(_anaNode.getContent()),null, new ExecOperatorContent(_anaNode.getOperatorContent()),new ExecOperDir(_anaNode.getSymbol()));\n+        return new ExecQuickOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),new ExecOperDir(_anaNode.getSymbol()));\n     }\n \n     private static ExecOperationNode procOper(OperationNode _anaNode, Forwards _forwards) {\n         if (_anaNode instanceof NumericOperation) {\n             NumericOperation c_ = (NumericOperation) _anaNode;\n-            return new ExecQuickOperation(new ExecOperationContent(c_.getContent()),null, new ExecOperatorContent(c_.getOperatorContent()), oper(c_));\n+            return new ExecQuickOperation(new ExecOperationContent(c_.getContent()), new ExecOperatorContent(c_.getOperatorContent()), oper(c_));\n         }\n         if (_anaNode instanceof QuickOperation) {\n             return quickOp((QuickOperation) _anaNode, _forwards);\n@@ -1674,14 +1705,15 @@ private static ExecOperationNode procOper(OperationNode _anaNode, Forwards _forw\n             AnaOperatorContent cont_ = new AnaOperatorContent();\n             cont_.setOpOffset(c_.getOpOffset());\n             cont_.setOper(\"??\");\n-            return new ExecQuickOperation(new ExecOperationContent(c_.getContent()), null, new ExecOperatorContent(cont_), new ExecOperNull(new CommonOperNullSafe(),names_));\n+            return new ExecQuickOperation(new ExecOperationContent(c_.getContent()), new ExecOperatorContent(cont_), new ExecOperNull(new CommonOperNullSafe(),names_));\n         }\n         if (_anaNode instanceof AssocationOperation) {\n             AssocationOperation c_ = (AssocationOperation) _anaNode;\n             return new ExecAssocationOperation(new ExecOperationContent(c_.getContent()));\n         }\n         if (_anaNode instanceof CompoundAffectationOperation) {\n-            return compound((CompoundAffectationOperation) _anaNode, _forwards);\n+            ExecCompoundAffectationOperation c_ = compound((CompoundAffectationOperation) _anaNode, _forwards);\n+            return updateConv(_forwards, c_, (CompoundAffectationOperation) _anaNode);\n         }\n         if (_anaNode instanceof AffectationOperation) {\n             AffectationOperation a_ = (AffectationOperation) _anaNode;\n@@ -1701,9 +1733,9 @@ private static ExecOperationNode quickOp(QuickOperation _anaNode, Forwards _forw\n         cont_.setOper(quickOperator(_anaNode));\n         cont_.setOpOffset(_anaNode.getOpOffset());\n         if (pair_.getFct() != null) {\n-            return new ExecExplicitOperatorOperation(new ExecOperationContent(_anaNode.getContent()),false, new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(fct_, _forwards)), pair_, new ExecArrContent(false),FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards), new ExecOperatorContent(cont_));\n+            return updateConv(_forwards, new ExecExplicitOperatorOperation(new ExecOperationContent(_anaNode.getContent()), false, new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\", \"\", -1), new ExecStaticEltContent(fct_, _forwards)), pair_, new ExecArrContent(false), new ExecOperatorContent(cont_)), _anaNode);\n         }\n-        return new ExecQuickOperation(new ExecOperationContent(_anaNode.getContent()), FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards), new ExecOperatorContent(cont_), new ExecOperDir(_anaNode.getSymbol()));\n+        return updateConv(_forwards, new ExecQuickOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(cont_), new ExecOperDir(_anaNode.getSymbol())), _anaNode);\n     }\n \n     public static String quickOperator(OperationNode _anaNode) {\n@@ -1717,14 +1749,14 @@ private static ExecCompoundAffectationOperation compound(CompoundAffectationOper\n         ClassMethodIdMemberIdTypeFct fct_ = _anaNode.getFct();\n         ExecTypeFunction pair_ = FetchMemberUtil.fetchFunctionOpPair(fct_, _forwards);\n         if (pair_.getFct() != null) {\n-            return new ExecCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(fct_, _forwards)), pair_, FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards), names_, false);\n+            return new ExecCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(fct_, _forwards)), pair_, names_, false);\n         }\n         String oper_ = _anaNode.getOperatorContent().getOper();\n         String op_ = oper_.substring(0, oper_.length() - 1);\n         if (StringExpUtil.isNullSafe(op_)) {\n-            return new ExecCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_,new ExecOperNull(_anaNode.getSymbol(),names_), FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards),false);\n+            return new ExecCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_,new ExecOperNull(_anaNode.getSymbol(),names_), false);\n         }\n-        return new ExecCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_,symbol(_anaNode),FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards),false);\n+        return new ExecCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_,symbol(_anaNode), false);\n     }\n     public static ExecOperSymbol symbol(CompoundAffectationOperation _anaNode) {\n         if (_anaNode.isConcat()) {"
        },
        {
            "sha": "d6c5851afa83091b3f4dfd342c21d8ff6213846e",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/exec/opers/RendCompoundAffectationExplicitCustOperation.java",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationExplicitCustOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationExplicitCustOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationExplicitCustOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -2,7 +2,6 @@\n \n import code.expressionlanguage.ContextEl;\n import code.expressionlanguage.exec.ArgumentWrapper;\n-import code.expressionlanguage.exec.util.ImplicitMethods;\n import code.expressionlanguage.exec.variables.ArgumentsPair;\n import code.expressionlanguage.fwd.blocks.ExecTypeFunction;\n import code.expressionlanguage.fwd.opers.ExecOperationContent;\n@@ -17,8 +16,8 @@ public final class RendCompoundAffectationExplicitCustOperation extends RendComp\n     private final ExecTypeFunction pair;\n     private final ExecStaticFctContent staticEltContent;\n \n-    public RendCompoundAffectationExplicitCustOperation(ExecOperationContent _content, ExecOperatorContent _operatorContent, ExecStaticFctContent _staticEltContent, ExecTypeFunction _pair, ImplicitMethods _converter, StringList _names, boolean _staticPostEltContent) {\n-        super(_content, _operatorContent, _converter, _names, _staticPostEltContent);\n+    public RendCompoundAffectationExplicitCustOperation(ExecOperationContent _content, ExecOperatorContent _operatorContent, ExecStaticFctContent _staticEltContent, ExecTypeFunction _pair, StringList _names, boolean _staticPostEltContent) {\n+        super(_content, _operatorContent, _names, _staticPostEltContent);\n         pair = _pair;\n         staticEltContent = _staticEltContent;\n     }"
        },
        {
            "sha": "47f4293a3e397547cedfe2cd580a2ccb3cc5c96d",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/exec/opers/RendCompoundAffectationOperation.java",
            "status": "modified",
            "additions": 4,
            "deletions": 5,
            "changes": 9,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -15,20 +15,19 @@\n public abstract class RendCompoundAffectationOperation extends RendAbstractAffectOperation implements CompoundedOperator {\n \n     private final ExecOperatorContent operatorContent;\n-    private final ImplicitMethods converter;\n+    private final ImplicitMethods converter = new ImplicitMethods();\n     private final boolean staticPostEltContent;\n \n-    protected RendCompoundAffectationOperation(ExecOperationContent _content, ExecOperatorContent _operatorContent, ImplicitMethods _converter, StringList _names, boolean _staticPostEltContent) {\n+    protected RendCompoundAffectationOperation(ExecOperationContent _content, ExecOperatorContent _operatorContent, StringList _names, boolean _staticPostEltContent) {\n         super(_content, _names);\n         operatorContent = _operatorContent;\n-        converter = _converter;\n         staticPostEltContent = _staticPostEltContent;\n     }\n \n     static void process(RendCompoundAffectationOperation _curr, IdMap<RendDynOperationNode, ArgumentsPair> _nodes, ContextEl _context, RendStackCall _rendStack, Argument _res) {\n         Argument res_ = _res;\n         ImplicitMethods converter_ = _curr.getConverter();\n-        if (converter_ != null) {\n+        if (!converter_.isEmpty()) {\n             Argument conv_ = tryConvert(converter_, res_, _context, _rendStack);\n             if (conv_ == null) {\n                 return;\n@@ -76,7 +75,7 @@ protected ExecOperatorContent getOperatorContent() {\n         return operatorContent;\n     }\n \n-    protected ImplicitMethods getConverter() {\n+    public ImplicitMethods getConverter() {\n         return converter;\n     }\n "
        },
        {
            "sha": "97647ba0c3da370e191917df14d0efc471b76836",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/exec/opers/RendCompoundAffectationStringOperation.java",
            "status": "modified",
            "additions": 2,
            "deletions": 3,
            "changes": 5,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationStringOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationStringOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendCompoundAffectationStringOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -4,7 +4,6 @@\n import code.expressionlanguage.ContextEl;\n import code.expressionlanguage.exec.opers.ExecCompoundAffectationStringOperation;\n import code.expressionlanguage.exec.symbols.ExecOperSymbol;\n-import code.expressionlanguage.exec.util.ImplicitMethods;\n import code.expressionlanguage.exec.variables.ArgumentsPair;\n import code.expressionlanguage.fwd.opers.ExecOperationContent;\n import code.expressionlanguage.fwd.opers.ExecOperatorContent;\n@@ -16,8 +15,8 @@ public final class RendCompoundAffectationStringOperation extends RendCompoundAf\n \n     private final ExecOperSymbol symbol;\n \n-    public RendCompoundAffectationStringOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, StringList _names, ExecOperSymbol _symbol, ImplicitMethods _converter, boolean _staticPostEltContent) {\n-        super(_opCont, _operatorContent,_converter, _names, _staticPostEltContent);\n+    public RendCompoundAffectationStringOperation(ExecOperationContent _opCont, ExecOperatorContent _operatorContent, StringList _names, ExecOperSymbol _symbol, boolean _staticPostEltContent) {\n+        super(_opCont, _operatorContent, _names, _staticPostEltContent);\n         symbol = _symbol;\n     }\n "
        },
        {
            "sha": "722afd1fb058aebf07543a25103663b33f65167b",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/exec/opers/RendDynOperationNode.java",
            "status": "modified",
            "additions": 1,
            "deletions": 1,
            "changes": 2,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendDynOperationNode.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendDynOperationNode.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendDynOperationNode.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -209,7 +209,7 @@ private void setQuickSimpleArgument(Argument _argument, IdMap<RendDynOperationNo\n \n     private void defCalcArg(Argument _argument, IdMap<RendDynOperationNode, ArgumentsPair> _nodes, ContextEl _context, RendStackCall _rendStack, Argument _out) {\n         Argument out_ = _out;\n-        if (implicits.isValidIndex(0)) {\n+        if (!implicits.isEmpty()) {\n             Argument res_ = tryConvert(implicits, out_, _context, _rendStack);\n             if (res_ == null) {\n                 return;"
        },
        {
            "sha": "98505b6785b4560f08c27bcfe13d33694fad91d6",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/exec/opers/RendExplicitOperatorOperation.java",
            "status": "modified",
            "additions": 6,
            "deletions": 3,
            "changes": 9,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendExplicitOperatorOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendExplicitOperatorOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendExplicitOperatorOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -22,14 +22,13 @@ public final class RendExplicitOperatorOperation extends RendSettableCallFctOper\n     private final ExecTypeFunction pair;\n     private final ExecStaticFctContent staticFctContent;\n     private final ExecOperatorContent operatorContent;\n-    private final ImplicitMethods converter;\n+    private final ImplicitMethods converter = new ImplicitMethods();\n \n-    public RendExplicitOperatorOperation(ExecOperationContent _content, boolean _intermediateDottedOperation, ExecStaticFctContent _staticFctContent, ExecTypeFunction _pair, ExecOperatorContent _offsetOper, ExecArrContent _arrContent, ImplicitMethods _converter) {\n+    public RendExplicitOperatorOperation(ExecOperationContent _content, boolean _intermediateDottedOperation, ExecStaticFctContent _staticFctContent, ExecTypeFunction _pair, ExecOperatorContent _offsetOper, ExecArrContent _arrContent) {\n         super(_content, _intermediateDottedOperation, _arrContent);\n         staticFctContent = _staticFctContent;\n         pair = _pair;\n         operatorContent = _offsetOper;\n-        converter = _converter;\n     }\n \n     @Override\n@@ -54,6 +53,10 @@ static ArgumentWrapper checkParametersOperatorsFormatted(RendMethodOperation _cu\n         return RendDynOperationNode.processCall(Argument.createVoid(), _context, _rendStack);\n     }\n \n+    public ImplicitMethods getConverter() {\n+        return converter;\n+    }\n+\n     @Override\n     public String getOper() {\n         return operatorContent.getOper();"
        },
        {
            "sha": "705a1ebf2de35ae550a30eaa8858aeb77f3a2896",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/exec/opers/RendQuickOperation.java",
            "status": "modified",
            "additions": 7,
            "deletions": 4,
            "changes": 11,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendQuickOperation.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendQuickOperation.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Fexec%2Fopers%2FRendQuickOperation.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -18,18 +18,17 @@ public final class RendQuickOperation extends RendMethodOperation implements Ren\n \n     private final ExecOperatorContent operatorContent;\n     private final ExecOperSymbol operSymbol;\n-    private final ImplicitMethods conv;\n+    private final ImplicitMethods conv = new ImplicitMethods();\n \n-    public RendQuickOperation(ExecOperationContent _content, ExecOperatorContent _off, ImplicitMethods _converter, ExecOperSymbol _op) {\n+    public RendQuickOperation(ExecOperationContent _content, ExecOperatorContent _off, ExecOperSymbol _op) {\n         super(_content);\n         operatorContent = _off;\n-        conv = _converter;\n         operSymbol = _op;\n     }\n \n     static void endCalculate(RendDynOperationNode _current, IdMap<RendDynOperationNode, ArgumentsPair> _nodes, ContextEl _context, RendStackCall _rendStack, Argument _argres, ImplicitMethods _converter) {\n         Argument argres_ = _argres;\n-        if (_converter != null) {\n+        if (!_converter.isEmpty()) {\n             Argument res_ = tryConvert(_converter, argres_, _context, _rendStack);\n             if (res_ == null) {\n                 return;\n@@ -57,6 +56,10 @@ public void calculate(IdMap<RendDynOperationNode, ArgumentsPair> _nodes, Context\n         endCalculate(this,_nodes,_context,_rendStack,arg_,conv);\n     }\n \n+    public ImplicitMethods getConv() {\n+        return conv;\n+    }\n+\n     @Override\n     public String getOper() {\n         return operatorContent.getOper();"
        },
        {
            "sha": "19e363d2dbc367b091f1e21ffb4e2eb722e4f720",
            "filename": "desktop/applis/apps/core/common/formathtml/src/main/java/code/formathtml/fwd/RendForwardInfos.java",
            "status": "modified",
            "additions": 53,
            "deletions": 17,
            "changes": 70,
            "blob_url": "https://github.com/Cardman/projects/blob/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Ffwd%2FRendForwardInfos.java",
            "raw_url": "https://github.com/Cardman/projects/raw/275d42c60b4abae21517b1d1a4930faaa35da473/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Ffwd%2FRendForwardInfos.java",
            "contents_url": "https://api.github.com/repos/Cardman/projects/contents/desktop%2Fapplis%2Fapps%2Fcore%2Fcommon%2Fformathtml%2Fsrc%2Fmain%2Fjava%2Fcode%2Fformathtml%2Ffwd%2FRendForwardInfos.java?ref=275d42c60b4abae21517b1d1a4930faaa35da473",
            "patch": "@@ -784,12 +784,15 @@ private static RendDynOperationNode procOperands(OperationNode _anaNode, Forward\n                 StringList names_ = _anaNode.getResultClass().getNames();\n                 AnaCallFctContent callFctContent_ = m_.getCallFctContent();\n                 ExecTypeFunction pair_ = FetchMemberUtil.fetchFunctionOpPair(callFctContent_.getMemberId(), _forwards);\n-                return new RendCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()),m_.getOffsetOper()), new ExecStaticFctContent(callFctContent_, _forwards), pair_, FetchMemberUtil.fetchImplicits(m_.getConv(), _forwards), names_, m_.isPost());\n+                RendCompoundAffectationExplicitCustOperation c_ = new RendCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()), m_.getOffsetOper()), new ExecStaticFctContent(callFctContent_, _forwards), pair_, names_, m_.isPost());\n+                return updateConv(_forwards, c_, m_);\n             }\n-            return new RendExplicitOperatorOperation(new ExecOperationContent(m_.getContent()), m_.isIntermediateDottedOperation(), new ExecStaticFctContent(m_.getCallFctContent(), _forwards), FetchMemberUtil.fetchFunctionOpPair(m_.getCallFctContent().getMemberId(), _forwards), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()),m_.getOffsetOper()), new ExecArrContent(m_.getArrContent()), FetchMemberUtil.fetchImplicits(m_.getConv(), _forwards));\n+            RendExplicitOperatorOperation c_ = new RendExplicitOperatorOperation(new ExecOperationContent(m_.getContent()), m_.isIntermediateDottedOperation(), new ExecStaticFctContent(m_.getCallFctContent(), _forwards), FetchMemberUtil.fetchFunctionOpPair(m_.getCallFctContent().getMemberId(), _forwards), new ExecOperatorContent(ForwardInfos.syntheticOperator(m_.getSyntheticOperator()), m_.getOffsetOper()), new ExecArrContent(m_.getArrContent()));\n+            return updateConv(_forwards, c_, m_);\n         }\n         if (_anaNode instanceof SemiAffectationOperation) {\n-            return semi((SemiAffectationOperation) _anaNode, _forwards);\n+            RendCompoundAffectationOperation c_ = semi((SemiAffectationOperation) _anaNode, _forwards);\n+            return updateConv(_forwards, c_, (SemiAffectationOperation) _anaNode);\n         }\n         if (_anaNode instanceof SymbolOperation) {\n             SymbolOperation n_ = (SymbolOperation) _anaNode;\n@@ -801,7 +804,7 @@ private static RendDynOperationNode procOperands(OperationNode _anaNode, Forward\n                         false,\n                         new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1), new ExecStaticEltContent(fct_, _forwards)),\n                         FetchMemberUtil.fetchFunctionOpPair(fct_, _forwards),\n-                        new ExecOperatorContent(n_.getOperatorContent()), new ExecArrContent(false), null);\n+                        new ExecOperatorContent(n_.getOperatorContent()), new ExecArrContent(false));\n             }\n         }\n         return procGeneOperators(_anaNode, _forwards);\n@@ -822,7 +825,7 @@ private static RendLeafOperation finalVariable(FinalVariableOperation _anaNode)\n     private static RendDynOperationNode procGeneOperators(OperationNode _anaNode, Forwards _forwards) {\n         if (_anaNode instanceof UnaryOperation) {\n             UnaryOperation m_ = (UnaryOperation) _anaNode;\n-            return new RendQuickOperation(new ExecOperationContent(m_.getContent()),new ExecOperatorContent(m_.getOperatorContent()),null,new ExecOperDir(m_.getSymbol()));\n+            return new RendQuickOperation(new ExecOperationContent(m_.getContent()),new ExecOperatorContent(m_.getOperatorContent()), new ExecOperDir(m_.getSymbol()));\n         }\n         if (_anaNode instanceof RandCodeOperation) {\n             RandCodeOperation m_ = (RandCodeOperation) _anaNode;\n@@ -850,38 +853,39 @@ private static RendDynOperationNode procOperators(OperationNode _anaNode, Forwar\n         }\n         if (_anaNode instanceof CmpOperation) {\n             CmpOperation c_ = (CmpOperation) _anaNode;\n-            return new RendQuickOperation(new ExecOperationContent(c_.getContent()), new ExecOperatorContent(c_.getOperatorContent()), null, new ExecOperDir(c_.getSymbol()));\n+            return new RendQuickOperation(new ExecOperationContent(c_.getContent()), new ExecOperatorContent(c_.getOperatorContent()), new ExecOperDir(c_.getSymbol()));\n         }\n         if (_anaNode instanceof InstanceOfOperation) {\n             InstanceOfOperation c_ = (InstanceOfOperation) _anaNode;\n             return new RendInstanceOfOperation(new ExecOperationContent(c_.getContent()), new ExecTypeCheckContent(c_.getTypeCheckContent()));\n         }\n         if (_anaNode instanceof EqOperation) {\n             EqOperation c_ = (EqOperation) _anaNode;\n-            return new RendQuickOperation(new ExecOperationContent(c_.getContent()),new ExecOperatorContent(c_.getOperatorContent()),null, new ExecOperDir(c_.getSymbol()));\n+            return new RendQuickOperation(new ExecOperationContent(c_.getContent()),new ExecOperatorContent(c_.getOperatorContent()), new ExecOperDir(c_.getSymbol()));\n         }\n         return procOper(_anaNode, _forwards);\n     }\n \n     private static RendDynOperationNode procOper(OperationNode _anaNode, Forwards _forwards) {\n         if (_anaNode instanceof NumericOperation) {\n             NumericOperation c_ = (NumericOperation) _anaNode;\n-            return new RendQuickOperation(new ExecOperationContent(c_.getContent()),new ExecOperatorContent(c_.getOperatorContent()), null, ForwardInfos.oper(c_));\n+            return new RendQuickOperation(new ExecOperationContent(c_.getContent()),new ExecOperatorContent(c_.getOperatorContent()), ForwardInfos.oper(c_));\n         }\n         if (_anaNode instanceof NullSafeOperation) {\n             NullSafeOperation n_ = (NullSafeOperation) _anaNode;\n             StringList names_ = _anaNode.getResultClass().getNames();\n             AnaOperatorContent cont_ = new AnaOperatorContent();\n             cont_.setOpOffset(n_.getOpOffset());\n             cont_.setOper(\"??\");\n-            return new RendQuickOperation(new ExecOperationContent(n_.getContent()),new ExecOperatorContent(cont_), null,new ExecOperNull(new CommonOperNullSafe(),names_));\n+            return new RendQuickOperation(new ExecOperationContent(n_.getContent()),new ExecOperatorContent(cont_), new ExecOperNull(new CommonOperNullSafe(),names_));\n //            return new RendNullSafeOperation(new ExecOperationContent(n_.getContent()),n_.getOpOffset(), names_);\n         }\n         if (_anaNode instanceof QuickOperation) {\n             return quickOperation((QuickOperation) _anaNode, _forwards);\n         }\n         if (_anaNode instanceof CompoundAffectationOperation) {\n-            return compound((CompoundAffectationOperation) _anaNode, _forwards);\n+            RendCompoundAffectationOperation c_ = compound((CompoundAffectationOperation) _anaNode, _forwards);\n+            return updateConv(_forwards, c_, (CompoundAffectationOperation) _anaNode);\n         }\n         if (_anaNode instanceof AffectationOperation) {\n             AffectationOperation a_ = (AffectationOperation) _anaNode;\n@@ -895,24 +899,24 @@ private static RendCompoundAffectationOperation semi(SemiAffectationOperation _a\n         StringList names_ = _anaNode.getResultClass().getNames();\n         ExecTypeFunction pair_ = FetchMemberUtil.fetchFunctionOpPair(_anaNode.getFct(), _forwards);\n         if (pair_.getFct() == null) {\n-            return new RendCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),names_,new ExecOperDir(_anaNode.getSymbol()),FetchMemberUtil.fetchImplicits(_anaNode.getConvTo(), _forwards), _anaNode.isPost());\n+            return new RendCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_, new ExecOperDir(_anaNode.getSymbol()), _anaNode.isPost());\n         }\n-        return new RendCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(_anaNode.getFct(), _forwards)), pair_, FetchMemberUtil.fetchImplicits(_anaNode.getConvTo(), _forwards), names_, _anaNode.isPost());\n+        return new RendCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\", \"\", -1), new ExecStaticEltContent(_anaNode.getFct(), _forwards)), pair_, names_, _anaNode.isPost());\n     }\n \n     private static RendCompoundAffectationOperation compound(CompoundAffectationOperation _anaNode, Forwards _forwards) {\n         StringList names_ = _anaNode.getResultClass().getNames();\n         ClassMethodIdMemberIdTypeFct fct_ = _anaNode.getFct();\n         ExecTypeFunction pair_ = FetchMemberUtil.fetchFunctionOpPair(fct_, _forwards);\n         if (pair_.getFct() != null) {\n-            return new RendCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(fct_, _forwards)), pair_, FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards), names_, false);\n+            return new RendCompoundAffectationExplicitCustOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(fct_, _forwards)), pair_, names_, false);\n         }\n         String oper_ = _anaNode.getOperatorContent().getOper();\n         String op_ = oper_.substring(0, oper_.length() - 1);\n         if (StringExpUtil.isNullSafe(op_)) {\n-            return new RendCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),names_,new ExecOperNull(_anaNode.getSymbol(), names_), FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards), false);\n+            return new RendCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()),names_,new ExecOperNull(_anaNode.getSymbol(), names_), false);\n         }\n-        return new RendCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_,ForwardInfos.symbol(_anaNode),FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards),false);\n+        return new RendCompoundAffectationStringOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(_anaNode.getOperatorContent()), names_,ForwardInfos.symbol(_anaNode), false);\n      }\n \n     private static RendDynOperationNode cast(Forwards _forwards, AnaExplicitContent _explicitContent, AnaOperationContent _content) {\n@@ -974,9 +978,41 @@ private static RendDynOperationNode quickOperation(QuickOperation _anaNode, Forw\n         cont_.setOper(ForwardInfos.quickOperator(_anaNode));\n         cont_.setOpOffset(_anaNode.getOpOffset());\n         if (pair_.getFct() != null) {\n-            return new RendExplicitOperatorOperation(new ExecOperationContent(_anaNode.getContent()), false,new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\",\"\",-1),new ExecStaticEltContent(fct_, _forwards)), pair_, new ExecOperatorContent(cont_), new ExecArrContent(false), FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards));\n+            RendExplicitOperatorOperation c_ = new RendExplicitOperatorOperation(new ExecOperationContent(_anaNode.getContent()), false, new ExecStaticFctContent(new ExecStaticFctCommonContent(\"\", \"\", -1), new ExecStaticEltContent(fct_, _forwards)), pair_, new ExecOperatorContent(cont_), new ExecArrContent(false));\n+            return updateConv(_forwards, c_, _anaNode);\n         }\n-        return new RendQuickOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(cont_), FetchMemberUtil.fetchImplicits(_anaNode.getConv(), _forwards), new ExecOperDir(_anaNode.getSymbol()));\n+        RendQuickOperation c_ = new RendQuickOperation(new ExecOperationContent(_anaNode.getContent()), new ExecOperatorContent(cont_), new ExecOperDir(_anaNode.getSymbol()));\n+        return updateConv(_forwards, c_, _anaNode);\n+    }\n+\n+    private static RendCompoundAffectationOperation updateConv(Forwards _forwards, RendCompoundAffectationOperation _c, CompoundAffectationOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static RendCompoundAffectationOperation updateConv(Forwards _forwards, RendCompoundAffectationOperation _c, SemiAffectationOperation _m) {\n+        FetchMemberUtil.impls(_m.getConvTo(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static RendCompoundAffectationExplicitCustOperation updateConv(Forwards _forwards, RendCompoundAffectationExplicitCustOperation _c, ExplicitOperatorOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static RendQuickOperation updateConv(Forwards _forwards, RendQuickOperation _c, QuickOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConv(), _forwards);\n+        return _c;\n+    }\n+\n+    private static RendExplicitOperatorOperation updateConv(Forwards _forwards, RendExplicitOperatorOperation _c, QuickOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n+    }\n+\n+    private static RendExplicitOperatorOperation updateConv(Forwards _forwards, RendExplicitOperatorOperation _c, ExplicitOperatorOperation _m) {\n+        FetchMemberUtil.impls(_m.getConv(), _c.getConverter(), _forwards);\n+        return _c;\n     }\n \n     private static void setImplicits(RendDynOperationNode _ex, OperationNode _ana, Forwards _forwards){"
        }
    ]
}