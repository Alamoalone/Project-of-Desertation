@@ -14,6 +14,7 @@
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 
+import com.safetynet.api.model.FireStation;
 import com.safetynet.api.model.Person;
 import com.safetynet.api.service.dataservice.PersonService;
 import com.safetynet.api.utils.IResponseHTTPEmpty;
@@ -45,23 +46,29 @@ public ResponseEntity<?> updateOnePersonById(@RequestBody Person person, @PathVa
 			return returnResponseEntityEmptyAndCode404();
 
 		}
-	
 	}
 
 	@DeleteMapping("/person/{id}")
-	public ResponseEntity<Long> deleteOnePersonById(@PathVariable String id) {
-		boolean isPersonRemoved = personService.deleteOnePersonById(id);
-		return isPersonRemoved ? new ResponseEntity<Long>(HttpStatus.NO_CONTENT)
-				: new ResponseEntity<Long>(HttpStatus.NOT_FOUND);
+	public ResponseEntity<Long> deleteOnePersonById(@PathVariable String id)  {
+		
+		try {
+			personService.deleteOnePersonById(id);
+			return new ResponseEntity<Long>(HttpStatus.NO_CONTENT);
+		} catch (NullPointerException e) {
+			System.out.println(e.getMessage());
+			return new ResponseEntity<Long>(HttpStatus.NOT_FOUND);
+		}	
 	}
 
 	@GetMapping("/person/{id}")
 	public ResponseEntity<?> getOnePerson(@PathVariable String id) {
-		Person personFoundById = personService.getOnePersonById(id);
-		if (personFoundById != null) {
+		Person personFoundById ;		
+		try {
+			personFoundById = personService.getOnePersonById(id);
 			return ResponseEntity.status(HttpStatus.OK).body(personFoundById);
-		} else {
-			return  returnResponseEntityEmptyAndCode404();
+		} catch (NullPointerException e) {
+			System.out.println(e.getMessage());
+			return returnResponseEntityEmptyAndCode404();
 		}
 	}
 