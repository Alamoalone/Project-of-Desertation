@@ -14,15 +14,14 @@
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 
-import com.safetynet.api.model.FireStation;
 import com.safetynet.api.model.Person;
 import com.safetynet.api.service.dataservice.PersonService;
 import com.safetynet.api.utils.IResponseHTTPEmpty;
 
 import jakarta.validation.Valid;
 
 @RestController
-public class PersonController implements  IResponseHTTPEmpty {
+public class PersonController implements IResponseHTTPEmpty {
 	@Autowired
 	private PersonService personService;
 
@@ -35,11 +34,11 @@ public ResponseEntity<Person> createPerson(@Valid @RequestBody Person person) {
 
 	@PutMapping("/person/{id}")
 	public ResponseEntity<?> updateOnePersonById(@RequestBody Person person, @PathVariable String id) {
-		Person personFoundById; 
-		
+		Person personFoundById;
+
 		try {
-			 personFoundById= personService.updatePerson(id, person);
-			return ResponseEntity.status(HttpStatus.CREATED).body( personFoundById);
+			personFoundById = personService.updatePerson(id, person);
+			return ResponseEntity.status(HttpStatus.CREATED).body(personFoundById);
 		} catch (NullPointerException e) {
 			// e.printStackTrace();
 			// ajouter log error
@@ -49,20 +48,20 @@ public ResponseEntity<?> updateOnePersonById(@RequestBody Person person, @PathVa
 	}
 
 	@DeleteMapping("/person/{id}")
-	public ResponseEntity<Long> deleteOnePersonById(@PathVariable String id)  {
-		
+	public ResponseEntity<Long> deleteOnePersonById(@PathVariable String id) {
+
 		try {
 			personService.deleteOnePersonById(id);
 			return new ResponseEntity<Long>(HttpStatus.NO_CONTENT);
 		} catch (NullPointerException e) {
 			System.out.println(e.getMessage());
 			return new ResponseEntity<Long>(HttpStatus.NOT_FOUND);
-		}	
+		}
 	}
 
 	@GetMapping("/person/{id}")
 	public ResponseEntity<?> getOnePerson(@PathVariable String id) {
-		Person personFoundById ;		
+		Person personFoundById;
 		try {
 			personFoundById = personService.getOnePersonById(id);
 			return ResponseEntity.status(HttpStatus.OK).body(personFoundById);
@@ -74,11 +73,11 @@ public ResponseEntity<?> getOnePerson(@PathVariable String id) {
 
 	@GetMapping("/person/")
 	public @ResponseBody ResponseEntity<?> getAllPersons() {
-		List<Person> allPersons ;
-		
+		List<Person> allPersons;
+
 		try {
 			allPersons = personService.getAllPersons();
-			return ResponseEntity.status(HttpStatus.OK).body( allPersons );
+			return ResponseEntity.status(HttpStatus.OK).body(allPersons);
 		} catch (NullPointerException e) {
 			System.out.println(e.getMessage());
 			return returnResponseEntityEmptyAndCode404();