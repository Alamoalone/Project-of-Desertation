@@ -331,36 +331,28 @@ private void getSchemaValues() {
 		Catalog targetCatalog = wizard.getTargetCatalog();
 		Catalog sourceCatalog = wizard.getOriginalSourceCatalog();
 		
-		ArrayList<String> dropDownSchemaList = new ArrayList<String>();
+		List<Schema> targetSchemaList = targetCatalog.getSchemas();
+		List<Schema> sourceSchemaList = sourceCatalog.getSchemas();
+
 		tarSchemaNameList = new ArrayList<String>();
+		ArrayList<String> dropDownSchemaList = new ArrayList<String>();
 		
-		if (targetCatalog.isDbHasUserSchema()) {
-			List<Schema> targetSchemaList = targetCatalog.getSchemas();
-			
-			for (Schema schema : targetSchemaList) {
-				tarSchemaNameList.add(schema.getName());
-				dropDownSchemaList.add(schema.getName());
-			}
-		} else {
-			tarSchemaNameList.add(targetCatalog.getConnectionParameters().getConUser());
+		for (Schema schema : targetSchemaList) {
+			tarSchemaNameList.add(schema.getName());
+			dropDownSchemaList.add(schema.getName());
 		}
 		
-		if (sourceCatalog.isDbHasUserSchema()) {
-			List<Schema> sourceSchemaList = sourceCatalog.getSchemas();
-			
-			for (Schema schema : sourceSchemaList) {
-				if (tarSchemaNameList.contains(schema.getName().toUpperCase())) {
-					continue;
-				}
-				
-				dropDownSchemaList.add(schema.getName());
+		for (Schema schema : sourceSchemaList) {
+			if (tarSchemaNameList.contains(schema.getName().toUpperCase())) {
+				continue;
 			}
-		} else {
-			tarSchemaNameList.add(sourceCatalog.getConnectionParameters().getConUser());
+			
+			dropDownSchemaList.add(schema.getName());
 		}
-
+		
 		if (targetCatalog.isDBAGroup()) {
 			tarSchemaNameArray = dropDownSchemaList.toArray(new String[] {});
+			
 		} else {
 			tarSchemaNameArray = new String[] {targetCatalog.getConnectionParameters().getConUser()};
 		}
@@ -409,10 +401,6 @@ public Object getValue(Object element, String property) {
 			
 			@Override
 			public boolean canModify(Object element, String property) {
-				if (!tarCatalog.isDbHasUserSchema()) {
-					return false;
-				}
-				
 				if (property.equals(propertyList[4]) || property.equals(propertyList[0])) {
 					return true;
 				} else {
@@ -582,17 +570,11 @@ private void setOnlineData() {
 		tarSchemaList = tarCatalog.getSchemas();
 		
 		Map<String, Schema> scriptSchemaMap = config.getScriptSchemaMapping();
-
+		
 		for (Schema schema : srcSchemaList) {
 			SrcTable srcTable = new SrcTable();
 			srcTable.setSrcDBType(srcCatalog.getDatabaseType().getName());
-			
-			if (srcCatalog.isDbHasUserSchema()) {
-				srcTable.setSrcSchema(schema.getName());
-			} else {
-				srcTable.setSrcSchema(srcCatalog.getConnectionParameters().getConUser());
-			}
-			
+			srcTable.setSrcSchema(schema.getName());
 			srcTable.setNote(schema.isGrantorSchema());
 			
 			if (!schema.isGrantorSchema()) {
@@ -625,7 +607,7 @@ private void setOnlineData() {
 				if (tarCatalog.isDBAGroup() && version >= 112) {
 					srcTable.setTarSchema(srcTable.getSrcSchema());
 				} else {
-					srcTable.setTarSchema(tarCatalog.getConnectionParameters().getConUser());
+					srcTable.setTarSchema(tarCatalog.getSchemas().get(0).getName());
 				}
 			}
 		}