@@ -31,6 +31,7 @@
 import uk.gov.companieshouse.company_appointments.model.data.DeltaOfficerData;
 import uk.gov.companieshouse.company_appointments.model.data.DeltaOfficerLinkTypes;
 import uk.gov.companieshouse.company_appointments.model.data.DeltaPrincipalOfficeAddress;
+import uk.gov.companieshouse.company_appointments.model.data.DeltaSensitiveData;
 import uk.gov.companieshouse.company_appointments.model.data.DeltaServiceAddress;
 import uk.gov.companieshouse.company_appointments.roles.RoleHelper;
 import uk.gov.companieshouse.logging.Logger;
@@ -63,8 +64,10 @@ public OfficerSummary map(CompanyAppointmentDocument companyAppointment, boolean
                 .appointedBefore(appointedBefore)
                 .resignedOn(resignedOn)
                 .countryOfResidence(isSecretary ? null : data.getCountryOfResidence())
-                .dateOfBirth(isSecretary ? null
-                        : mapDateOfBirth(companyAppointment.getSensitiveData().getDateOfBirth(), registerView))
+                .dateOfBirth(isSecretary ? null : Optional.ofNullable(companyAppointment.getSensitiveData())
+                        .map(DeltaSensitiveData::getDateOfBirth)
+                        .map(dob -> mapDateOfBirth(dob, registerView))
+                        .orElse(null))
                 .links(mapLinks(data.getLinks()))
                 .nationality(data.getNationality())
                 .occupation(data.getOccupation())
@@ -157,19 +160,14 @@ private ItemLinkTypes mapLinks(DeltaItemLinkTypes itemLinkTypes) {
     }
 
     private DateOfBirth mapDateOfBirth(Instant dob, boolean registerView) {
-        return Optional.ofNullable(dob)
-                .map(dateOfBirth -> registerView ? mapDateOfBirth(dateOfBirth, dateOfBirth.atZone(UTC).getDayOfMonth())
-                        : mapDateOfBirth(dateOfBirth, null))
-                .orElse(null);
+        return registerView ? mapDateOfBirth(dob, dob.atZone(UTC).getDayOfMonth()) : mapDateOfBirth(dob, null);
     }
 
     private DateOfBirth mapDateOfBirth(Instant dob, Integer day) {
-        return Optional.ofNullable(dob)
-                .map(dateOfBirth -> new DateOfBirth()
-                        .day(day)
-                        .month(dateOfBirth.atZone(UTC).getMonthValue())
-                        .year(dateOfBirth.atZone(UTC).getYear()))
-                .orElse(null);
+        return new DateOfBirth()
+                .day(day)
+                .month(dob.atZone(UTC).getMonthValue())
+                .year(dob.atZone(UTC).getYear());
     }
 
     private String mapOfficerName(DeltaOfficerData data) {