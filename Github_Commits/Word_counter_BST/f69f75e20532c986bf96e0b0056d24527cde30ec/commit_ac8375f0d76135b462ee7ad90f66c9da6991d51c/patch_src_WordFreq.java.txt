@@ -4,27 +4,31 @@
 public class WordFreq implements Comparator<WordFreq>{
     private int frequency;
     private String word, root, postfix, type[];
-    private static final MyLinkedList <String> verbPostfix = new MyLinkedList<>("ζομαστε", "ζοταν", "ζεσαι", "ζεται", "ζεται", "ζομαι", "νομαστε", "θηκαμε", "ομαστε", "ομασταν", "μαστε", "ομασταν" , "οσασταν", "ομουνα", "οσουνα", "ουσαμε", "ουσατε", "ουσαν",
-                                                                                    "νησα", "νησε", "νησαμε", "νησατε", "νησαν", "νουμε", "νετε", "νουν", "ασαμε", "ασατε", "ασουμε", "νουσαμε", "ναμε", "νας", "νησει",
-                                                                                    "ησουμε", "ησετε" , "ησουν", "ηθηκαν", "ηθηκε", "ησει", "ησετε", "ησουν", "σουμε",  "αγαμε", "σαστε", "ησεις", "ησει",
-                                                                                    "ξουμε", "χνω", "χνεται", "σεις", "νουν", "ουσα", "ουσε", "ουσες", "οτανε", "ουνταν","μασταν", "ομουν", "οσουν", "τομαι", "νομαι", "ομαι",
-                                                                                    "εθηκες", "εθηκε", "εθηκαμε", "εθηκατε", "εθηκαν", "νθεις","νθω", "νομουν",
-                                                                                    "ζονται", "ονται",  "ωμαστε", "ωσαστε","μαστε", "σαστε", "ζεσαι", "στηκε", "στει", "στηκα", "στηκη", "ισεις", "σισουν", "σουμε", "ηθουμε", "θουμε", "ιουμαι", "ηκαμε",
-                                                                                    "ζουμε", "ιοαταν", "ιαιμαι", "ιεται", "ιετε", "εθηκα", "εσαι", "εται","οντε", "εσε", "χνω", "χνεις", "χνει", "ζουν", "ηθηκα",
-                                                                                    "χνουμε", "χναμε", "χνατε", "χνετε", "χνεται", "χνουν", "χναν", "στει", "στηκε", "νοταν", "οταν", "ιζουμε", "χτω", "χτηκα", "χτεις", "χτουμε", "χτειτε", "χτουν", "τομουν", "τει", "ηθει", "ηθεις",
+    private static final MyLinkedList <String> verbPostfix = new MyLinkedList<>("ζομαστε", "ζοταν", "ζεσαι", "ζεται", "ζεται", "ζομαι", "νομαστε", "ομαστε", "ομασταν", "ομασταν", "οσασταν", "ομουνα", "οσουνα", "ουσαμε", "ουσατε", "ουσαν",
+                                                                                    "ηθηκαμε", "ωμασταν", "θηκαμε","νησα", "νησε", "νησαμε", "νησατε", "νησαν", "νουμε", "νετε", "νουν", "ασαμε", "ασατε", "ασουμε", "νουσαμε", "ναμε", "νας", "νησει",
+                                                                                    "ησουμε", "ησετε" , "ησουν", "ηθηκαν", "ηθηκε", "ησει", "ησετε", "ησουν", "αγαμε", "σαστε", "ησεις", "ησει",
+                                                                                    "ξουμε", "χνω", "χνεται", "νουν", "ουσα", "ουσε", "ουσες", "οτανε", "ουνταν","μασταν", "ομουν", "οσουν", "τομαι", "νομαι", "ομαι",
+                                                                                    "εθηκες", "εθηκε", "εθηκαμε", "εθηκατε", "εθηκαν", "νθεις","νθω", "νομουν", "ζονται", "ονται",  "ωμαστε", "ωσαστε","μαστε", "σαστε", "ζεσαι",
+                                                                                    "στηκε", "στει", "στηκα", "στηκη", "ισεις", "σισουν", "ασουμε", "αζουμε", "αζετε", "αζουν","ηθουμε", "θουμε", "ιουμαι", "ηκαμε",
+                                                                                    "ιοαταν", "ιαιμαι", "ιεται", "ιετε", "εθηκα", "εσαι", "εται","οντε", "εσε", "χνω", "χνεις", "χνει", "ηθηκα",
+                                                                                    "χνουμε", "χναμε", "χνατε", "χνετε", "χνεται", "χνουν", "χναν", "στει", "στηκε", "νοταν", "οταν",
+                                                                                    "χτω", "χτηκα", "χτεις", "χτουμε", "χτειτε", "χτουν", "τομουν", "τει", "ηθει", "ηθεις",
                                                                                     "ψει", "ιζετε", "σετε", "αξουνε", "αχνω","αξεις", "αξει", "αξουμε", "αξετε", "αξουν", "αγμενα", "αχνω", "θεις", "κα", "κες", "κε", "ειται",
                                                                                     "ιεμαι", "ουμαι", "εμαι", "μαι", "σαι", "ναι", "νανε", "αζαν", "τσε", "ευω", "ευει", "θηκε", "αινω", "αινεις", "αινει", "αινουμε", "αινετε", "αινουν", "σουν",
-                                                                                    "ζουνε", "ηκε", "ηκα", "αξα", "ζων", "ζας", "ζης", "χτει", "ναει", "εσε", "χνω", "ειτε", "ετε", "ουν", "νεται",
-                                                                                    "ασα", "αζεται", "ασω", "ασεις", "ασει", "ασουμε", "ασετε", "ασουν", "ηνω", "ηνεις", "ηνει", "ηνουμε", "ηνετε", "ηνουν", "αγε", "αγες", "αγε",
-                                                                                    "αγαμε", "αγατε", "αγαν", "αζω", "αζεις", "αζει", "αζουμε", "αζετε", "αζουν", "αξω", "αζα", "αζες", "αζε", "αζαμε", "αζατε", "αζαν",
-                                                                                    "ησες", "ησαμε","ησατε","ησαν", "σαμε", "σατε", "σατε", "σεις", "ησω", "ησα", "ησει", "ησε", "αγα", "ασε", "εψα", "αμε", "αω", "αει", "ησει",
-                                                                                    "στω", "ανε", "θουν","ουμε", "αεις", "αξε", "ξεις", "ζει", "ουνε", "ζουν", "θει", "είς", "ατε", "γα", "με", "γε", "εσει","ησε", "σαν", "ξα", "ξω",
+                                                                                    "ζουνε", "ηκε", "ηκα", "αξα", "ζων", "ζας", "ζης", "χτει", "ναει", "εσε", "χνω", "ειτε", "ετε", "νεται",
+                                                                                    "ασα", "αζεται", "ασω", "ασεις", "ασει", "ζουμε", "σουμε", "ζουν", "ουν", "ασετε", "ασουν", "ηνω", "ηνεις", "ηνει", "ηνουμε", "ηνετε", "ηνουν", "αγε", "αγες", "αγε",
+                                                                                    "αγαμε", "αγατε", "αγαν", "αζω", "αζεις", "αζει",  "αξω", "αζα", "αζες", "αζε", "αζαμε", "αζατε", "αζαν", "ηθω", "ωμασταν",
+                                                                                    "ησες", "ησαμε","ησατε","ησαν", "σαμε", "σατε", "σατε", "ησω", "ησα", "ησει", "ησε", "αγα", "ασε", "εψα", "αμε", "αω", "αει", "ησει",
+                                                                                    "στω", "ανε", "θουν","ουμε", "αεις", "αξε", "ξεις", "ζει", "ουνε", "θει", "είς", "ατε", "γα", "με", "γε", "εσει","ησε", "σαν", "ξα", "ξω",
                                                                                     "ξουνε", "ξεις", "ξει", "ξουμε", "ξετε", "ξουν", "σω", "υω", "σω", "ζεις", "νεις", "νει", "ναμε", "νατε", "ναν",
                                                                                     "σει", "σεο", "σες", "σα", "σε", "αν", "ας", "αι", "ές", "θω", "εις", "ει", "νε", "ον",  "ζω", "ζα", "φα", "να", "σω", "νω", "με", "τω", "φω", "ψω", "ψα", "φε", "ψε", "ω", "ε");
     private static final MyLinkedList <String> nounPostfix = new MyLinkedList<>("σμενος", "σμενη", "σμενο", "σμενοι", "σμενα", "ημενος", "ημενη", "ημενο", "ημενοι", "ημενα", "ημενες", "μενος", "μενο", "μενα", "μενοι", "μενη", "μενες", "οτητα",
                                                                                     "οντας", "τσες", "οτα", "στης", "ουλα", "ατα", "ατη", "ατο", "ατου", "ατος", "ατες", "ατων", "κων", "ακι", "ωση", "τσα", "ακια", "τσικα","ηση", "σος", "σεων", "σεις", "ους", "κος", "κους",
-                                                                                    "ην", "κο", "ση", "ου", "κης", "κη", "οι", "ης", "ων", "ος", "ες", "s", "η", "ς", "ν", "ο", "α");
+                                                                                    "ην", "κο", "αση", "ση", "ου", "κης", "τι", "τια", "κη", "οι", "ης", "ων", "ος", "ες", "s", "η", "ς", "ν", "ο", "α");
     private static final MyLinkedList <String> adverbPostfix = new MyLinkedList<>("ως", "αια", "αιος", "ιαια");
+    private static final MyLinkedList<String> prepositions = new MyLinkedList<>("αντί", "από", "για", "δίχως", "εναντίον", "εξαιτίας", "έως", "ίσαμε", "κατά", "με", "μετά", "μεταξύ", "μέχρι", "παρά", "πριν", "προς", "σαν",
+                                                                                        "σε", "χωρίς", "ανά", "άνευ", "διά", "εις", "εκ", "εκτός", "εν", "ένεκα", "εντός", "επί", "κατόπιν", "λόγω", "μείον", "μέσω", "περί", "πλην", "προ", "συν", "υπέρ", "υπό", "χάριν");
+
     public static MyLinkedList<String> rootWords = new MyLinkedList<>();
 
 
@@ -45,6 +49,14 @@ public WordFreq(WordFreq wf) {
      *  As a result all roots and postfixes are without diacritics */
     public static void findRootAndPostfix(WordFreq wf) {
         String NormalizedWord = Normalizer.normalize(wf.word, Normalizer.Form.NFD).replaceAll("\\p{InCombiningDiacriticalMarks}+", ""); //removes diacritics
+
+        for (String prep : prepositions) {
+            if (NormalizedWord.equals(prep)) {
+                wf.type = new String[]{"preposition"};
+                return ;
+            }
+        }
+
         for (String p : verbPostfix) {
             if (NormalizedWord.endsWith(p) && (NormalizedWord.length() - p.length()) >= 1) { // second condition: is compound word (sintheti leksi)
                 String stringRoot = NormalizedWord.substring(0, NormalizedWord.length() - p.length());
@@ -59,8 +71,7 @@ else if (NormalizedWord.endsWith("σα") && NormalizedWord.length() < 4)
                         wf.type = "noun or adjective".split(" or ");
                     else if (NormalizedWord.endsWith("κες") || NormalizedWord.endsWith("ας")){
                         wf.type = "verb or noun or adjective".split(" or ");
-                    }
-                    else
+                    } else
                         wf.type = new String[]{"verb"};
                     break;
                 }
@@ -74,7 +85,10 @@ else if (NormalizedWord.endsWith("κες") || NormalizedWord.endsWith("ας")){
                     if (wf.postfix == null || p.length() > wf.postfix.length()) {
                         wf.root = stringRoot;
                         wf.postfix = p;
-                        wf.type = "noun or adjective".split(" or ");
+                        if (NormalizedWord.endsWith("σεις"))
+                            wf.type = "verb or noun or adjective".split(" or ");
+                        else
+                            wf.type = "noun or adjective".split(" or ");
                         break;
                     }
                 }