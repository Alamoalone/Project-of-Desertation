@@ -11,15 +11,18 @@
 public class CreditScore extends Actor
 {
     private GreenfootImage creditscoreImage;
-    private int scoreNumber;
+    public static int scoreNumber;
+    //private Character character;
+    //private int current_score = character.getCredit();
+    
     
     /**
      * Act - do whatever the CreditScore wants to do. This method is called whenever
      * the 'Act' or 'Run' button gets pressed in the environment.
      */
     //creates credit score image with a value of 300
-    public CreditScore(){
-        scoreNumber = 300;
+    public CreditScore(int scoreNumber){
+        setScoreNumber(300);
         Font font = new Font(true, false, 20);
         creditscoreImage = new GreenfootImage(250, 50);
         creditscoreImage.setColor(getColor());
@@ -28,11 +31,14 @@ public CreditScore(){
         setImage(creditscoreImage);
     }
     
-    public CreditScore(int scoreNumber)
+    /*public CreditScore(int scoreNumber)
     {
-      this.scoreNumber = scoreNumber;  
-    }
-    
+      setScoreNumber(scoreNumber);  
+    }*/
+    /*
+    public CreditScore(CreditScore userCredit){
+        scoreNumber = userCredit.scoreNumber;
+    }*/
     
     //updates new credit score image with a new score
     //updates the font color to the value in the getColor method
@@ -48,22 +54,19 @@ public void act()
     
     // method that returns a color based on the scoreNumber value
     private Color getColor(){
-        if (300<=scoreNumber && scoreNumber<=579){
+        if (300<=scoreNumber && scoreNumber<=629){
             return Color.RED;    
         }
-        else if (580<=scoreNumber && scoreNumber<=669){
+        else if (630<=scoreNumber && scoreNumber<=689){
             return Color.ORANGE;
         }
-        else if (670<=scoreNumber && scoreNumber<=739){
+        else if (690<=scoreNumber && scoreNumber<=719){
             return Color.YELLOW;
         }
-        else if (740<=scoreNumber && scoreNumber<=799){
-            return Color.BLUE;
-        }
         return Color.GREEN;
     }
     
-    public void increaseScoreNumber(int amount){
+    /*public void increaseScoreNumber(int amount){
         this.scoreNumber = this.scoreNumber + amount;
         
         creditscoreImage.clear();
@@ -78,6 +81,13 @@ public void decreaseScoreNumber(int amount){
         creditscoreImage.clear();
         creditscoreImage.drawString("Credit Score: \n      "+ this.scoreNumber, 0, 20);
         setImage(creditscoreImage);
+    }*/
+    public int getScoreNumber(){
+        return scoreNumber;
+    }
+    
+    public void setScoreNumber(int scoreNumber){
+        this.scoreNumber = scoreNumber;
     }
     
 }
\ No newline at end of file