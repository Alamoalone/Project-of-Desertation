{
    "sha": "ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
    "node_id": "C_kwDOKAup79oAKGZmNjZiYzU3YTY4ZGNlZmU5NWFhYmFiNzY4YWU0MGM1OGQwNWI4ZTQ",
    "commit": {
        "author": {
            "name": "Michał Mościcki",
            "email": "michal.moscicki.cb@gmail.com",
            "date": "2023-09-10T16:31:25Z"
        },
        "committer": {
            "name": "Michał Mościcki",
            "email": "michal.moscicki.cb@gmail.com",
            "date": "2023-09-10T16:31:25Z"
        },
        "message": "fix: input cleaner null pointer exception",
        "tree": {
            "sha": "19b9a3f23c770ce64e70a6a13efc4cf096646e9c",
            "url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/git/trees/19b9a3f23c770ce64e70a6a13efc4cf096646e9c"
        },
        "url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/git/commits/ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
        "comment_count": 0,
        "verification": {
            "verified": false,
            "reason": "unsigned",
            "signature": null,
            "payload": null
        }
    },
    "url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/commits/ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
    "html_url": "https://github.com/MichalMoscicki/ArtAgencyApp/commit/ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
    "comments_url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/commits/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/comments",
    "author": {
        "login": "MichalMoscicki",
        "id": 120569136,
        "node_id": "U_kgDOBy-9MA",
        "avatar_url": "https://avatars.githubusercontent.com/u/120569136?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MichalMoscicki",
        "html_url": "https://github.com/MichalMoscicki",
        "followers_url": "https://api.github.com/users/MichalMoscicki/followers",
        "following_url": "https://api.github.com/users/MichalMoscicki/following{/other_user}",
        "gists_url": "https://api.github.com/users/MichalMoscicki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MichalMoscicki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MichalMoscicki/subscriptions",
        "organizations_url": "https://api.github.com/users/MichalMoscicki/orgs",
        "repos_url": "https://api.github.com/users/MichalMoscicki/repos",
        "events_url": "https://api.github.com/users/MichalMoscicki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MichalMoscicki/received_events",
        "type": "User",
        "site_admin": false
    },
    "committer": {
        "login": "MichalMoscicki",
        "id": 120569136,
        "node_id": "U_kgDOBy-9MA",
        "avatar_url": "https://avatars.githubusercontent.com/u/120569136?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MichalMoscicki",
        "html_url": "https://github.com/MichalMoscicki",
        "followers_url": "https://api.github.com/users/MichalMoscicki/followers",
        "following_url": "https://api.github.com/users/MichalMoscicki/following{/other_user}",
        "gists_url": "https://api.github.com/users/MichalMoscicki/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MichalMoscicki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MichalMoscicki/subscriptions",
        "organizations_url": "https://api.github.com/users/MichalMoscicki/orgs",
        "repos_url": "https://api.github.com/users/MichalMoscicki/repos",
        "events_url": "https://api.github.com/users/MichalMoscicki/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MichalMoscicki/received_events",
        "type": "User",
        "site_admin": false
    },
    "parents": [
        {
            "sha": "b76a6d019bb72b6dda3d5acedf4e0c29dd80a4f8",
            "url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/commits/b76a6d019bb72b6dda3d5acedf4e0c29dd80a4f8",
            "html_url": "https://github.com/MichalMoscicki/ArtAgencyApp/commit/b76a6d019bb72b6dda3d5acedf4e0c29dd80a4f8"
        }
    ],
    "stats": {
        "total": 161,
        "additions": 39,
        "deletions": 122
    },
    "files": [
        {
            "sha": "31aa39d9f1c4f2dc522a0e0213f4b1f8c30c7558",
            "filename": "src/main/java/com/immpresariat/ArtAgencyApp/models/Contact.java",
            "status": "modified",
            "additions": 3,
            "deletions": 2,
            "changes": 5,
            "blob_url": "https://github.com/MichalMoscicki/ArtAgencyApp/blob/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/src%2Fmain%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Fmodels%2FContact.java",
            "raw_url": "https://github.com/MichalMoscicki/ArtAgencyApp/raw/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/src%2Fmain%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Fmodels%2FContact.java",
            "contents_url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/contents/src%2Fmain%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Fmodels%2FContact.java?ref=ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
            "patch": "@@ -5,8 +5,8 @@\n import jakarta.validation.constraints.NotBlank;\n import jakarta.validation.constraints.Pattern;\n import lombok.*;\n+import org.springframework.lang.Nullable;\n \n-import java.net.URL;\n import java.util.Date;\n import java.util.List;\n \n@@ -35,10 +35,11 @@ public class Contact {\n \n     private String webPage;\n \n-    @Pattern(regexp = \"^[\\\\\\\\+]?[(]?[0-9]{2}[)]?-?[0-9]{3}[-\\\\\\\\s\\\\\\\\.]?[0-9]{4,6}$\",\n+    @Pattern(regexp = \"^(?:[\\\\\\\\+]?[(]?[0-9]{2}[)]?-?[0-9]{3}[-\\\\\\\\s\\\\\\\\.]?[0-9]{4,6}|null)?$\",\n             message = \"Invalid phone number. Proper structure: \\\"+\\\"[dial number][number]. Eg: +481111222333\")\n     private String phone;\n \n+    @Nullable\n     @Email(message = \"Invalid email\")\n     private String email;\n "
        },
        {
            "sha": "f1d88ecd54204aafa14ab87b3a561ba215784628",
            "filename": "src/main/java/com/immpresariat/ArtAgencyApp/utils/InputCleaner.java",
            "status": "modified",
            "additions": 13,
            "deletions": 4,
            "changes": 17,
            "blob_url": "https://github.com/MichalMoscicki/ArtAgencyApp/blob/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/src%2Fmain%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Futils%2FInputCleaner.java",
            "raw_url": "https://github.com/MichalMoscicki/ArtAgencyApp/raw/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/src%2Fmain%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Futils%2FInputCleaner.java",
            "contents_url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/contents/src%2Fmain%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Futils%2FInputCleaner.java?ref=ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
            "patch": "@@ -35,10 +35,19 @@ public ContactPerson clean(ContactPerson contactPerson){\n \n     public Contact clean(Contact contact){\n         contact.setTitle(contact.getTitle().trim());\n-        contact.setDescription(contact.getDescription().trim());\n-        contact.setEmail(contact.getEmail().trim());\n-        contact.setPhone(contact.getPhone().trim());\n-        contact.setWebPage(contact.getWebPage().trim());\n+\n+        if(contact.getDescription() != null){\n+            contact.setDescription(contact.getDescription().trim());\n+        }\n+        if(contact.getEmail() != null){\n+            contact.setEmail(contact.getEmail().trim());\n+        }\n+        if(contact.getPhone() != null){\n+            contact.setPhone(contact.getPhone().trim());\n+        }\n+        if(contact.getWebPage() != null){\n+            contact.setWebPage(contact.getWebPage().trim());\n+        }\n         return contact;\n     }\n "
        },
        {
            "sha": "f082535adca966bc6a3d4751ecf50defb6f40874",
            "filename": "src/test/java/com/immpresariat/ArtAgencyApp/controllers/ContactControllerSearchITest.java",
            "status": "removed",
            "additions": 0,
            "deletions": 114,
            "changes": 114,
            "blob_url": "https://github.com/MichalMoscicki/ArtAgencyApp/blob/b76a6d019bb72b6dda3d5acedf4e0c29dd80a4f8/src%2Ftest%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Fcontrollers%2FContactControllerSearchITest.java",
            "raw_url": "https://github.com/MichalMoscicki/ArtAgencyApp/raw/b76a6d019bb72b6dda3d5acedf4e0c29dd80a4f8/src%2Ftest%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Fcontrollers%2FContactControllerSearchITest.java",
            "contents_url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/contents/src%2Ftest%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Fcontrollers%2FContactControllerSearchITest.java?ref=b76a6d019bb72b6dda3d5acedf4e0c29dd80a4f8",
            "patch": "@@ -1,114 +0,0 @@\n-package com.immpresariat.ArtAgencyApp.controllers;\n-\n-import com.immpresariat.ArtAgencyApp.models.Contact;\n-import com.immpresariat.ArtAgencyApp.models.ContactPerson;\n-import com.immpresariat.ArtAgencyApp.models.Event;\n-import com.immpresariat.ArtAgencyApp.models.Institution;\n-import com.immpresariat.ArtAgencyApp.payload.EventDTO;\n-import com.immpresariat.ArtAgencyApp.repository.ContactPersonRepository;\n-import com.immpresariat.ArtAgencyApp.repository.ContactRepository;\n-import com.immpresariat.ArtAgencyApp.repository.EventRepository;\n-import com.immpresariat.ArtAgencyApp.repository.InstitutionRepository;\n-import com.immpresariat.ArtAgencyApp.service.ContactService;\n-import com.immpresariat.ArtAgencyApp.service.EventService;\n-import org.hamcrest.CoreMatchers;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n-import org.springframework.boot.test.context.SpringBootTest;\n-import org.springframework.http.MediaType;\n-import org.springframework.test.web.servlet.MockMvc;\n-import org.springframework.test.web.servlet.ResultActions;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\n-import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n-import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\n-import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n-\n-\n-@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)\n-@AutoConfigureMockMvc\n-public class ContactControllerSearchITest {\n-\n-    @Autowired\n-    private MockMvc mockMvc;\n-    @Autowired\n-    private ContactRepository contactRepository;\n-    @Autowired\n-    private ContactService contactService;\n-    @Autowired\n-    private InstitutionRepository institutionRepository;\n-    @Autowired\n-    private EventService eventService;\n-    @Autowired\n-    private ContactPersonRepository contactPersonRepository;\n-\n-    @BeforeEach\n-    public void setup() {\n-        cleanDB();\n-    }\n-\n-    @Test\n-    public void givenName_whenSearchByName_thenReturnTwoContacts() throws Exception {\n-        //given - precondition or setup\n-        generateTestData();\n-        String name = \"dni\";\n-\n-        //when - action or the behavior that we are going to test\n-        ResultActions response = mockMvc.perform(get(\"/api/v1/contacts/search?name=\" + name)\n-                .contentType(MediaType.APPLICATION_JSON));\n-\n-        //then - verify the output\n-        response.andDo(print())\n-                .andExpect(status().isOk())\n-                .andExpect(jsonPath(\"$.size()\", CoreMatchers.is(2)));\n-        //spr czy są dwa\n-\n-    }\n-    //znajdź po nazwie\n-    //znajdź po miesiącu\n-    //znajdź po miesiącu i nazwie\n-    //negative scenario - pusty\n-\n-\n-\n-    private void generateTestData(){\n-\n-        Contact contact = contactRepository.save(new Contact());\n-        Long contactId = contact.getId();\n-\n-        EventDTO event1 = EventDTO.builder()\n-                .name(\"Dni Wiązowny\")\n-                .description(\"Bardzo miła impreza\")\n-                .monthWhenOrganized(6)\n-                .build();\n-\n-        eventService.create(event1, contactId);\n-\n-        EventDTO event2 = EventDTO.builder()\n-                .name(\"Dni Białołęki\")\n-                .description(\"\")\n-                .monthWhenOrganized(8)\n-                .build();\n-        eventService.create(event2, contactId);\n-\n-        EventDTO event3 = EventDTO.builder()\n-                .name(\"Sylwester z jedynką\")\n-                .description(\"No raczej tam nie zagramy\")\n-                .monthWhenOrganized(8)\n-                .build();\n-        eventService.create(event3, contactId);\n-\n-    }\n-\n-    private void cleanDB() {\n-        List<Contact> contacts = contactRepository.findAll();\n-        for(Contact contact : contacts){\n-            contactService.deleteWithAssociatedData(contact.getId());\n-        }\n-    }\n-}"
        },
        {
            "sha": "3066282c45b40ca9c81f69e92d5ce2562066ce84",
            "filename": "src/test/java/com/immpresariat/ArtAgencyApp/utils/InputCleanerTest.java",
            "status": "modified",
            "additions": 23,
            "deletions": 2,
            "changes": 25,
            "blob_url": "https://github.com/MichalMoscicki/ArtAgencyApp/blob/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/src%2Ftest%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Futils%2FInputCleanerTest.java",
            "raw_url": "https://github.com/MichalMoscicki/ArtAgencyApp/raw/ff66bc57a68dcefe95aabab768ae40c58d05b8e4/src%2Ftest%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Futils%2FInputCleanerTest.java",
            "contents_url": "https://api.github.com/repos/MichalMoscicki/ArtAgencyApp/contents/src%2Ftest%2Fjava%2Fcom%2Fimmpresariat%2FArtAgencyApp%2Futils%2FInputCleanerTest.java?ref=ff66bc57a68dcefe95aabab768ae40c58d05b8e4",
            "patch": "@@ -87,13 +87,16 @@ public void givenContactPersonObject_whenClean_thenReturnCleanedContactPersonObj\n \n     }\n \n-    @DisplayName(\"JUnit test for clean contact method\")\n+    @DisplayName(\"JUnit test for clean contact method (all fields field)\")\n     @Test\n     public void givenContactObject_whenTrim_thenReturnCleanedContactObject() {\n         //given - precondition or setup\n         Contact contact = Contact.builder()\n                 .title(\" DK Chotomów  \")\n                 .description(\"   Opis  \")\n+                .webPage(\" https://www.google.com/search \")\n+                .phone(\" +48938475970 \")\n+                .email(\" abc@.gmail.com\")\n                 .build();\n \n         //when - action or the behavior that we are going to test\n@@ -103,8 +106,26 @@ public void givenContactObject_whenTrim_thenReturnCleanedContactObject() {\n         //then - verify the output\n         assertEquals(\"DK Chotomów\", cleanedContact.getTitle());\n         assertEquals(\"Opis\", cleanedContact.getDescription());\n-\n+        assertEquals(\"+48938475970\", cleanedContact.getPhone());\n+        assertEquals(\"https://www.google.com/search\", cleanedContact.getWebPage());\n+        assertEquals(\"abc@.gmail.com\", cleanedContact.getEmail());\n     }\n \n \n+    @DisplayName(\"JUnit test for clean contact method (only title)\")\n+    @Test\n+    public void givenContactObjectWithTitleOnly_whenTrim_thenReturnCleanedContactObject() {\n+        //given - precondition or setup\n+        Contact contact = Contact.builder()\n+                .title(\" DK Chotomów  \")\n+                .build();\n+\n+        //when - action or the behavior that we are going to test\n+        Contact cleanedContact = inputCleaner.clean(contact);\n+\n+        //then - verify the output\n+        assertNotNull(cleanedContact);\n+        assertEquals(\"DK Chotomów\", cleanedContact.getTitle());\n+    }\n+\n }\n\\ No newline at end of file"
        }
    ]
}