@@ -2,6 +2,8 @@
 
 import static org.assertj.core.api.Assertions.assertThat;
 
+//import com.mashape.unirest.http.Unirest;
+//import com.mashape.unirest.http.exceptions.UnirestException;
 import hexlet.code.database.UrlChecksRepository;
 import hexlet.code.database.UrlsRepository;
 import hexlet.code.model.Url;
@@ -18,6 +20,7 @@
 import org.junit.jupiter.params.provider.ValueSource;
 
 import java.io.IOException;
+//import java.net.URI;
 import java.sql.SQLException;
 
 class AppTest {
@@ -120,7 +123,7 @@ public void testInvalidUrlPage() {
     }
 
     @Test
-    public void testUrlCheck() throws IOException {
+    public void testUrlCheck() {
         var mockServerUrl = mockServer.url("/").toString();
 
         var mockResponse = new MockResponse();
@@ -149,4 +152,21 @@ public void testUrlCheck() throws IOException {
             assertThat(urlCheck.getCreatedAt()).isNotNull();
         }));
     }
+
+//    @Test
+//    public void testInvalidUrlCheck() throws SQLException, UnirestException {
+//        var url = new Url("invalid_url.invalid_dom");
+//        UrlsRepository.save(url);
+//        var id = url.getId();
+//
+//        var response = Unirest.post("http://localhost:7070" + Routes.checkUrlPath(id)).asJson();
+//        var redirectUrl = response.getHeaders().get("location").get(0);
+//        if (redirectUrl != null) {
+//            URI redirectUri = URI.create(redirectUrl);
+//            response = Unirest.get(redirectUri.toString()).asJson();
+//        }
+//
+//        String responseBody = response.getBody().toString();
+//        assertThat(responseBody).contains("Не удалось выполнить проверку");
+//    }
 }